Search.setIndex({"alltitles":{"Indices and tables":[[9,"indices-and-tables"]],"Module contents":[[0,"module-delex"],[1,"module-delex.execution"],[2,"module-delex.graph"],[3,"module-delex.index"],[4,"module-delex.lang"],[5,"module-delex.lang.predicate"],[6,"module-delex.storage"],[7,"module-delex.storage.hash_map"],[8,"module-delex.utils"]],"Submodules":[[0,"submodules"],[1,"submodules"],[2,"submodules"],[3,"submodules"],[4,"submodules"],[5,"submodules"],[6,"submodules"],[7,"submodules"],[8,"submodules"]],"Subpackages":[[0,"subpackages"],[4,"subpackages"],[6,"subpackages"]],"Welcome to Delex\u2019s documentation!":[[9,null]],"delex":[[10,null]],"delex package":[[0,null]],"delex.execution package":[[1,null]],"delex.execution.cost_estimation module":[[1,"module-delex.execution.cost_estimation"]],"delex.execution.dataframe_stream module":[[1,"module-delex.execution.dataframe_stream"]],"delex.execution.graph_executor module":[[1,"module-delex.execution.graph_executor"]],"delex.execution.optimizer module":[[1,"module-delex.execution.optimizer"]],"delex.execution.partitioner module":[[1,"module-delex.execution.partitioner"]],"delex.execution.plan_executor module":[[1,"module-delex.execution.plan_executor"]],"delex.graph package":[[2,null]],"delex.graph.algorithms module":[[2,"module-delex.graph.algorithms"]],"delex.graph.node module":[[2,"module-delex.graph.node"]],"delex.graph.utils module":[[2,"module-delex.graph.utils"]],"delex.index package":[[3,null]],"delex.index.filtered_set_sim_index module":[[3,"module-delex.index.filtered_set_sim_index"]],"delex.index.filtered_set_sim_index_slice module":[[3,"module-delex.index.filtered_set_sim_index_slice"]],"delex.index.hash_index module":[[3,"module-delex.index.hash_index"]],"delex.index.set_sim_index module":[[3,"module-delex.index.set_sim_index"]],"delex.lang package":[[4,null]],"delex.lang.predicate package":[[5,null]],"delex.lang.predicate.bootleg_predicate module":[[5,"module-delex.lang.predicate.bootleg_predicate"]],"delex.lang.predicate.exact_match_predicate module":[[5,"module-delex.lang.predicate.exact_match_predicate"]],"delex.lang.predicate.name_map module":[[5,"module-delex.lang.predicate.name_map"]],"delex.lang.predicate.predicate module":[[5,"module-delex.lang.predicate.predicate"]],"delex.lang.predicate.set_sim_predicate module":[[5,"module-delex.lang.predicate.set_sim_predicate"]],"delex.lang.predicate.string_sim_predicate module":[[5,"module-delex.lang.predicate.string_sim_predicate"]],"delex.lang.predicate.threshold_predicate module":[[5,"module-delex.lang.predicate.threshold_predicate"]],"delex.lang.predicate.topk_predicate module":[[5,"module-delex.lang.predicate.topk_predicate"]],"delex.lang.program module":[[4,"module-delex.lang.program"]],"delex.lang.rule module":[[4,"module-delex.lang.rule"]],"delex.storage package":[[6,null]],"delex.storage.hash_map package":[[7,null]],"delex.storage.hash_map.hash_map_base module":[[7,"module-delex.storage.hash_map.hash_map_base"]],"delex.storage.hash_map.id_int_map module":[[7,"module-delex.storage.hash_map.id_int_map"]],"delex.storage.hash_map.string_int_map module":[[7,"module-delex.storage.hash_map.string_int_map"]],"delex.storage.memmap_arr module":[[6,"module-delex.storage.memmap_arr"]],"delex.storage.memmap_seqs module":[[6,"module-delex.storage.memmap_seqs"]],"delex.storage.packed_memmap_arrs module":[[6,"module-delex.storage.packed_memmap_arrs"]],"delex.storage.sorted_set module":[[6,"module-delex.storage.sorted_set"]],"delex.storage.span_map module":[[6,"module-delex.storage.span_map"]],"delex.storage.string_store module":[[6,"module-delex.storage.string_store"]],"delex.storage.vector_store module":[[6,"module-delex.storage.vector_store"]],"delex.tokenizer module":[[0,"module-delex.tokenizer"]],"delex.utils package":[[8,null]],"delex.utils.build_cache module":[[8,"module-delex.utils.build_cache"]],"delex.utils.funcs module":[[8,"module-delex.utils.funcs"]],"delex.utils.hash_function module":[[8,"module-delex.utils.hash_function"]],"delex.utils.numba_functions module":[[8,"module-delex.utils.numba_functions"]],"delex.utils.traits module":[[8,"module-delex.utils.traits"]]},"docnames":["delex","delex.execution","delex.graph","delex.index","delex.lang","delex.lang.predicate","delex.storage","delex.storage.hash_map","delex.utils","index","modules"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2},"filenames":["delex.rst","delex.execution.rst","delex.graph.rst","delex.index.rst","delex.lang.rst","delex.lang.predicate.rst","delex.storage.rst","delex.storage.hash_map.rst","delex.utils.rst","index.rst","modules.rst"],"indexentries":{"add_in_edge() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.add_in_edge",false]],"add_out_edge() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.add_out_edge",false]],"alphanumerictokenizer (class in delex.tokenizer)":[[0,"delex.tokenizer.AlphaNumericTokenizer",false]],"ancestors() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.ancestors",false]],"apply() (delex.execution.dataframe_stream.dataframestream method)":[[1,"delex.execution.dataframe_stream.DataFrameStream.apply",false]],"arrays_to_encoded_sparse_vector() (delex.storage.vector_store.memmapvectorstore static method)":[[6,"delex.storage.vector_store.MemmapVectorStore.arrays_to_encoded_sparse_vector",false]],"attach_current_thread_jvm() (in module delex.utils.funcs)":[[8,"delex.utils.funcs.attach_current_thread_jvm",false]],"base_tokenize() (delex.tokenizer.shingletokenizer method)":[[0,"delex.tokenizer.ShingleTokenizer.base_tokenize",false]],"blockingprogram (class in delex.lang.program)":[[4,"delex.lang.program.BlockingProgram",false]],"blockingprogramoptimizer (class in delex.execution.optimizer)":[[1,"delex.execution.optimizer.BlockingProgramOptimizer",false]],"bm25topkpredicate (class in delex.lang.predicate.topk_predicate)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate",false]],"bm25topkpredicate.sim (class in delex.lang.predicate.topk_predicate)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.Sim",false]],"bootlegpredicate (class in delex.lang.predicate.bootleg_predicate)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate",false]],"bootlegsim (class in delex.lang.predicate.bootleg_predicate)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegSim",false]],"build() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.build",false]],"build() (delex.graph.node.predicatenode method)":[[2,"delex.graph.node.PredicateNode.build",false]],"build() (delex.graph.node.setopnode method)":[[2,"delex.graph.node.SetOpNode.build",false]],"build() (delex.index.filtered_set_sim_index.filteredsetsimindex method)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.build",false]],"build() (delex.index.hash_index.hashindex method)":[[3,"delex.index.hash_index.HashIndex.build",false]],"build() (delex.lang.predicate.bootleg_predicate.bootlegpredicate method)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.build",false]],"build() (delex.lang.predicate.exact_match_predicate.exactmatchpredicate method)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.build",false]],"build() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.build",false]],"build() (delex.lang.predicate.set_sim_predicate.setsimpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.build",false]],"build() (delex.lang.predicate.string_sim_predicate.stringsimpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.build",false]],"build() (delex.lang.predicate.topk_predicate.bm25topkpredicate method)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.build",false]],"build() (delex.storage.hash_map.id_int_map.idoffsethashmap class method)":[[7,"delex.storage.hash_map.id_int_map.IdOffsetHashMap.build",false]],"build() (delex.storage.hash_map.string_int_map.stringinthashmap class method)":[[7,"delex.storage.hash_map.string_int_map.StringIntHashMap.build",false]],"build() (delex.storage.memmap_seqs.memmapseqs class method)":[[6,"delex.storage.memmap_seqs.MemmapSeqs.build",false]],"build() (delex.storage.sorted_set.memmapsortedsets class method)":[[6,"delex.storage.sorted_set.MemmapSortedSets.build",false]],"build() (delex.storage.string_store.memmapstrings class method)":[[6,"delex.storage.string_store.MemmapStrings.build",false]],"build() (delex.storage.vector_store.memmapvectorstore class method)":[[6,"delex.storage.vector_store.MemmapVectorStore.build",false]],"build() (delex.tokenizer.tokenizer method)":[[0,"delex.tokenizer.Tokenizer.build",false]],"build_parallelism (delex.execution.graph_executor.graphexecutor attribute)":[[1,"delex.execution.graph_executor.GraphExecutor.build_parallelism",false]],"build_time (delex.execution.graph_executor.graphexecutionstats property)":[[1,"delex.execution.graph_executor.GraphExecutionStats.build_time",false]],"build_time (delex.execution.graph_executor.partitionexecutionstats attribute)":[[1,"delex.execution.graph_executor.PartitionExecutionStats.build_time",false]],"build_time (delex.execution.graph_executor.subgraphexecutionstats property)":[[1,"delex.execution.graph_executor.SubGraphExecutionStats.build_time",false]],"build_time() (delex.execution.cost_estimation.costestimator method)":[[1,"delex.execution.cost_estimation.CostEstimator.build_time",false]],"buildcache (class in delex.utils.build_cache)":[[8,"delex.utils.build_cache.BuildCache",false]],"cachedbm25indexkey (class in delex.lang.predicate.topk_predicate)":[[5,"delex.lang.predicate.topk_predicate.CachedBM25IndexKey",false]],"cachednameindexkey (class in delex.lang.predicate.bootleg_predicate)":[[5,"delex.lang.predicate.bootleg_predicate.CachedNameIndexKey",false]],"cachednameskey (class in delex.lang.predicate.bootleg_predicate)":[[5,"delex.lang.predicate.bootleg_predicate.CachedNamesKey",false]],"cachedobjectkey (class in delex.utils.build_cache)":[[8,"delex.utils.build_cache.CachedObjectKey",false]],"cacheitem (class in delex.utils.build_cache)":[[8,"delex.utils.build_cache.CacheItem",false]],"class_type (delex.index.filtered_set_sim_index_slice.cosinesetsimindexslice attribute)":[[3,"delex.index.filtered_set_sim_index_slice.CosineSetSimIndexSlice.class_type",false]],"class_type (delex.index.filtered_set_sim_index_slice.jaccardsetsimindexslice attribute)":[[3,"delex.index.filtered_set_sim_index_slice.JaccardSetSimIndexSlice.class_type",false]],"class_type (delex.index.set_sim_index.setsimindexslice attribute)":[[3,"delex.index.set_sim_index.SetSimIndexSlice.class_type",false]],"clone_graph() (in module delex.graph.algorithms)":[[2,"delex.graph.algorithms.clone_graph",false]],"column (delex.execution.partitioner.dataframepartitioner attribute)":[[1,"delex.execution.partitioner.DataFramePartitioner.column",false]],"compute_estimates() (delex.execution.cost_estimation.costestimator method)":[[1,"delex.execution.cost_estimation.CostEstimator.compute_estimates",false]],"compute_scores() (delex.lang.predicate.bootleg_predicate.bootlegpredicate method)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.compute_scores",false]],"compute_scores() (delex.lang.predicate.exact_match_predicate.exactmatchpredicate method)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.compute_scores",false]],"compute_scores() (delex.lang.predicate.set_sim_predicate.cosinepredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.CosinePredicate.compute_scores",false]],"compute_scores() (delex.lang.predicate.set_sim_predicate.jaccardpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.JaccardPredicate.compute_scores",false]],"compute_scores() (delex.lang.predicate.set_sim_predicate.overlapcoeffpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.OverlapCoeffPredicate.compute_scores",false]],"compute_scores() (delex.lang.predicate.string_sim_predicate.stringsimpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.compute_scores",false]],"compute_scores() (delex.lang.predicate.threshold_predicate.thresholdpredicate method)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.compute_scores",false]],"contains() (delex.lang.predicate.bootleg_predicate.bootlegpredicate method)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.contains",false]],"contains() (delex.lang.predicate.exact_match_predicate.exactmatchpredicate method)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.contains",false]],"contains() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.contains",false]],"contains() (delex.lang.predicate.set_sim_predicate.setsimpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.contains",false]],"contains() (delex.lang.predicate.string_sim_predicate.jarowinklerpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.JaroWinklerPredicate.contains",false]],"contains() (delex.lang.predicate.string_sim_predicate.smithwatermanpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.SmithWatermanPredicate.contains",false]],"contains() (delex.lang.predicate.threshold_predicate.thresholdpredicate method)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.contains",false]],"contains() (delex.lang.predicate.topk_predicate.bm25topkpredicate method)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.contains",false]],"contains() (delex.lang.rule.rule method)":[[4,"delex.lang.rule.Rule.contains",false]],"cosine() (delex.storage.sorted_set.memmapsortedsets method)":[[6,"delex.storage.sorted_set.MemmapSortedSets.cosine",false]],"cosine_threshold() (delex.index.set_sim_index.setsimindex method)":[[3,"delex.index.set_sim_index.SetSimIndex.cosine_threshold",false]],"cosinepredicate (class in delex.lang.predicate.set_sim_predicate)":[[5,"delex.lang.predicate.set_sim_predicate.CosinePredicate",false]],"cosinesetsimindexslice (class in delex.index.filtered_set_sim_index_slice)":[[3,"delex.index.filtered_set_sim_index_slice.CosineSetSimIndexSlice",false]],"cost_est (delex.execution.graph_executor.graphexecutor attribute)":[[1,"delex.execution.graph_executor.GraphExecutor.cost_est",false]],"cost_estimation_time (delex.execution.plan_executor.planexecutionstats attribute)":[[1,"delex.execution.plan_executor.PlanExecutionStats.cost_estimation_time",false]],"costestimator (class in delex.execution.cost_estimation)":[[1,"delex.execution.cost_estimation.CostEstimator",false]],"create_span_map() (in module delex.storage.span_map)":[[6,"delex.storage.span_map.create_span_map",false]],"dataframepartitioner (class in delex.execution.partitioner)":[[1,"delex.execution.partitioner.DataFramePartitioner",false]],"dataframestream (class in delex.execution.dataframe_stream)":[[1,"delex.execution.dataframe_stream.DataFrameStream",false]],"decode_sparse_vector() (delex.storage.vector_store.memmapvectorstore static method)":[[6,"delex.storage.vector_store.MemmapVectorStore.decode_sparse_vector",false]],"default_plan() (delex.execution.optimizer.blockingprogramoptimizer method)":[[1,"delex.execution.optimizer.BlockingProgramOptimizer.default_plan",false]],"deinit() (delex.index.filtered_set_sim_index.filteredsetsimindex method)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.deinit",false]],"deinit() (delex.index.hash_index.hashindex method)":[[3,"delex.index.hash_index.HashIndex.deinit",false]],"deinit() (delex.lang.predicate.bootleg_predicate.bootlegpredicate method)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.deinit",false]],"deinit() (delex.lang.predicate.exact_match_predicate.exactmatchpredicate method)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.deinit",false]],"deinit() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.deinit",false]],"deinit() (delex.lang.predicate.set_sim_predicate.setsimpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.deinit",false]],"deinit() (delex.lang.predicate.string_sim_predicate.stringsimpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.deinit",false]],"deinit() (delex.lang.predicate.topk_predicate.bm25topkpredicate method)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.deinit",false]],"deinit() (delex.storage.hash_map.hash_map_base.distributablehashmap method)":[[7,"delex.storage.hash_map.hash_map_base.DistributableHashMap.deinit",false]],"deinit() (delex.storage.memmap_arr.memmaparray method)":[[6,"delex.storage.memmap_arr.MemmapArray.deinit",false]],"deinit() (delex.storage.memmap_seqs.memmapseqs method)":[[6,"delex.storage.memmap_seqs.MemmapSeqs.deinit",false]],"deinit() (delex.storage.packed_memmap_arrs.packedmemmaparrays method)":[[6,"delex.storage.packed_memmap_arrs.PackedMemmapArrays.deinit",false]],"deinit() (delex.tokenizer.tokenizer method)":[[0,"delex.tokenizer.Tokenizer.deinit",false]],"deinit() (delex.utils.traits.sparkdistributable method)":[[8,"delex.utils.traits.SparkDistributable.deinit",false]],"delete() (delex.storage.memmap_arr.memmaparray method)":[[6,"delex.storage.memmap_arr.MemmapArray.delete",false]],"delete() (delex.storage.memmap_seqs.memmapseqs method)":[[6,"delex.storage.memmap_seqs.MemmapSeqs.delete",false]],"delete() (delex.storage.packed_memmap_arrs.packedmemmaparrays method)":[[6,"delex.storage.packed_memmap_arrs.PackedMemmapArrays.delete",false]],"delex":[[0,"module-delex",false]],"delex.execution":[[1,"module-delex.execution",false]],"delex.execution.cost_estimation":[[1,"module-delex.execution.cost_estimation",false]],"delex.execution.dataframe_stream":[[1,"module-delex.execution.dataframe_stream",false]],"delex.execution.graph_executor":[[1,"module-delex.execution.graph_executor",false]],"delex.execution.optimizer":[[1,"module-delex.execution.optimizer",false]],"delex.execution.partitioner":[[1,"module-delex.execution.partitioner",false]],"delex.execution.plan_executor":[[1,"module-delex.execution.plan_executor",false]],"delex.graph":[[2,"module-delex.graph",false]],"delex.graph.algorithms":[[2,"module-delex.graph.algorithms",false]],"delex.graph.node":[[2,"module-delex.graph.node",false]],"delex.graph.utils":[[2,"module-delex.graph.utils",false]],"delex.index":[[3,"module-delex.index",false]],"delex.index.filtered_set_sim_index":[[3,"module-delex.index.filtered_set_sim_index",false]],"delex.index.filtered_set_sim_index_slice":[[3,"module-delex.index.filtered_set_sim_index_slice",false]],"delex.index.hash_index":[[3,"module-delex.index.hash_index",false]],"delex.index.set_sim_index":[[3,"module-delex.index.set_sim_index",false]],"delex.lang":[[4,"module-delex.lang",false]],"delex.lang.predicate":[[5,"module-delex.lang.predicate",false]],"delex.lang.predicate.bootleg_predicate":[[5,"module-delex.lang.predicate.bootleg_predicate",false]],"delex.lang.predicate.exact_match_predicate":[[5,"module-delex.lang.predicate.exact_match_predicate",false]],"delex.lang.predicate.name_map":[[5,"module-delex.lang.predicate.name_map",false]],"delex.lang.predicate.predicate":[[5,"module-delex.lang.predicate.predicate",false]],"delex.lang.predicate.set_sim_predicate":[[5,"module-delex.lang.predicate.set_sim_predicate",false]],"delex.lang.predicate.string_sim_predicate":[[5,"module-delex.lang.predicate.string_sim_predicate",false]],"delex.lang.predicate.threshold_predicate":[[5,"module-delex.lang.predicate.threshold_predicate",false]],"delex.lang.predicate.topk_predicate":[[5,"module-delex.lang.predicate.topk_predicate",false]],"delex.lang.program":[[4,"module-delex.lang.program",false]],"delex.lang.rule":[[4,"module-delex.lang.rule",false]],"delex.storage":[[6,"module-delex.storage",false]],"delex.storage.hash_map":[[7,"module-delex.storage.hash_map",false]],"delex.storage.hash_map.hash_map_base":[[7,"module-delex.storage.hash_map.hash_map_base",false]],"delex.storage.hash_map.id_int_map":[[7,"module-delex.storage.hash_map.id_int_map",false]],"delex.storage.hash_map.string_int_map":[[7,"module-delex.storage.hash_map.string_int_map",false]],"delex.storage.memmap_arr":[[6,"module-delex.storage.memmap_arr",false]],"delex.storage.memmap_seqs":[[6,"module-delex.storage.memmap_seqs",false]],"delex.storage.packed_memmap_arrs":[[6,"module-delex.storage.packed_memmap_arrs",false]],"delex.storage.sorted_set":[[6,"module-delex.storage.sorted_set",false]],"delex.storage.span_map":[[6,"module-delex.storage.span_map",false]],"delex.storage.string_store":[[6,"module-delex.storage.string_store",false]],"delex.storage.vector_store":[[6,"module-delex.storage.vector_store",false]],"delex.tokenizer":[[0,"module-delex.tokenizer",false]],"delex.utils":[[8,"module-delex.utils",false]],"delex.utils.build_cache":[[8,"module-delex.utils.build_cache",false]],"delex.utils.funcs":[[8,"module-delex.utils.funcs",false]],"delex.utils.hash_function":[[8,"module-delex.utils.hash_function",false]],"delex.utils.numba_functions":[[8,"module-delex.utils.numba_functions",false]],"delex.utils.traits":[[8,"module-delex.utils.traits",false]],"distributablehashmap (class in delex.storage.hash_map.hash_map_base)":[[7,"delex.storage.hash_map.hash_map_base.DistributableHashMap",false]],"dot() (delex.storage.vector_store.memmapvectorstore method)":[[6,"delex.storage.vector_store.MemmapVectorStore.dot",false]],"dot_graph (delex.execution.graph_executor.graphexecutionstats attribute)":[[1,"delex.execution.graph_executor.GraphExecutionStats.dot_graph",false]],"drop() (delex.execution.dataframe_stream.dataframestream method)":[[1,"delex.execution.dataframe_stream.DataFrameStream.drop",false]],"drop_rules (delex.lang.program.blockingprogram attribute)":[[4,"delex.lang.program.BlockingProgram.drop_rules",false]],"droprule (class in delex.lang.rule)":[[4,"delex.lang.rule.DropRule",false]],"editdistancepredicate (class in delex.lang.predicate.string_sim_predicate)":[[5,"delex.lang.predicate.string_sim_predicate.EditDistancePredicate",false]],"equivalent() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.equivalent",false]],"estimate_cost (delex.execution.plan_executor.planexecutor attribute)":[[1,"delex.execution.plan_executor.PlanExecutor.estimate_cost",false]],"estimate_plan_cost() (delex.execution.cost_estimation.costestimator method)":[[1,"delex.execution.cost_estimation.CostEstimator.estimate_plan_cost",false]],"exactmatchpredicate (class in delex.lang.predicate.exact_match_predicate)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate",false]],"exactmatchpredicate.sim (class in delex.lang.predicate.exact_match_predicate)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.Sim",false]],"exec_time (delex.execution.graph_executor.graphexecutionstats property)":[[1,"delex.execution.graph_executor.GraphExecutionStats.exec_time",false]],"exec_time (delex.execution.graph_executor.partitionexecutionstats attribute)":[[1,"delex.execution.graph_executor.PartitionExecutionStats.exec_time",false]],"exec_time (delex.execution.graph_executor.subgraphexecutionstats property)":[[1,"delex.execution.graph_executor.SubGraphExecutionStats.exec_time",false]],"execute() (delex.execution.graph_executor.graphexecutor method)":[[1,"delex.execution.graph_executor.GraphExecutor.execute",false]],"execute() (delex.execution.plan_executor.planexecutor method)":[[1,"delex.execution.plan_executor.PlanExecutor.execute",false]],"execute() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.execute",false]],"execute() (delex.graph.node.predicatenode method)":[[2,"delex.graph.node.PredicateNode.execute",false]],"execute() (delex.graph.node.setopnode method)":[[2,"delex.graph.node.SetOpNode.execute",false]],"fetch() (delex.index.hash_index.hashindex method)":[[3,"delex.index.hash_index.HashIndex.fetch",false]],"fetch() (delex.storage.memmap_seqs.memmapseqs method)":[[6,"delex.storage.memmap_seqs.MemmapSeqs.fetch",false]],"fetch() (delex.storage.string_store.memmapstrings method)":[[6,"delex.storage.string_store.MemmapStrings.fetch",false]],"fetch() (delex.storage.vector_store.memmapvectorstore method)":[[6,"delex.storage.vector_store.MemmapVectorStore.fetch",false]],"fetch_bytes() (delex.storage.string_store.memmapstrings method)":[[6,"delex.storage.string_store.MemmapStrings.fetch_bytes",false]],"filter() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.filter",false]],"filter_array() (delex.execution.partitioner.dataframepartitioner method)":[[1,"delex.execution.partitioner.DataFramePartitioner.filter_array",false]],"filter_batch() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.filter_batch",false]],"filter_batch() (delex.lang.predicate.threshold_predicate.thresholdpredicate method)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.filter_batch",false]],"filter_batch() (delex.lang.predicate.topk_predicate.bm25topkpredicate method)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.filter_batch",false]],"filter_time() (delex.execution.cost_estimation.costestimator method)":[[1,"delex.execution.cost_estimation.CostEstimator.filter_time",false]],"filteredsetsimindex (class in delex.index.filtered_set_sim_index)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex",false]],"filteredsetsimindex.cachekey (class in delex.index.filtered_set_sim_index)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.CacheKey",false]],"filteredsetsimindexslice (class in delex.index.filtered_set_sim_index_slice)":[[3,"delex.index.filtered_set_sim_index_slice.FilteredSetSimIndexSlice",false]],"find_all_nodes() (in module delex.graph.algorithms)":[[2,"delex.graph.algorithms.find_all_nodes",false]],"find_sink() (in module delex.graph.algorithms)":[[2,"delex.graph.algorithms.find_sink",false]],"fit() (delex.execution.cost_estimation.scalingmodel class method)":[[1,"delex.execution.cost_estimation.ScalingModel.fit",false]],"from_arrow_iter() (delex.execution.dataframe_stream.dataframestream class method)":[[1,"delex.execution.dataframe_stream.DataFrameStream.from_arrow_iter",false]],"from_pandas_iter() (delex.execution.dataframe_stream.dataframestream class method)":[[1,"delex.execution.dataframe_stream.DataFrameStream.from_pandas_iter",false]],"from_sparse_mat() (delex.index.filtered_set_sim_index.filteredsetsimindex class method)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.from_sparse_mat",false]],"from_sparse_mat() (delex.index.set_sim_index.setsimindex class method)":[[3,"delex.index.set_sim_index.SetSimIndex.from_sparse_mat",false]],"gap_cost (delex.lang.predicate.string_sim_predicate.smithwatermanpredicate.sim attribute)":[[5,"delex.lang.predicate.string_sim_predicate.SmithWatermanPredicate.Sim.gap_cost",false]],"generate_plan() (delex.execution.plan_executor.planexecutor method)":[[1,"delex.execution.plan_executor.PlanExecutor.generate_plan",false]],"get() (delex.utils.build_cache.buildcache method)":[[8,"delex.utils.build_cache.BuildCache.get",false]],"get_logger() (in module delex.utils.funcs)":[[8,"delex.utils.funcs.get_logger",false]],"get_partition() (delex.execution.partitioner.dataframepartitioner method)":[[1,"delex.execution.partitioner.DataFramePartitioner.get_partition",false]],"graph_exec_stats (delex.execution.plan_executor.planexecutionstats attribute)":[[1,"delex.execution.plan_executor.PlanExecutionStats.graph_exec_stats",false]],"graphexecutionstats (class in delex.execution.graph_executor)":[[1,"delex.execution.graph_executor.GraphExecutionStats",false]],"graphexecutor (class in delex.execution.graph_executor)":[[1,"delex.execution.graph_executor.GraphExecutor",false]],"hash() (delex.utils.hash_function.hashfunction method)":[[8,"delex.utils.hash_function.HashFunction.hash",false]],"hash_map_get_key() (in module delex.storage.hash_map.id_int_map)":[[7,"delex.storage.hash_map.id_int_map.hash_map_get_key",false]],"hash_map_get_keys() (in module delex.storage.hash_map.id_int_map)":[[7,"delex.storage.hash_map.id_int_map.hash_map_get_keys",false]],"hash_map_insert_key() (in module delex.storage.hash_map.id_int_map)":[[7,"delex.storage.hash_map.id_int_map.hash_map_insert_key",false]],"hash_map_insert_keys() (in module delex.storage.hash_map.id_int_map)":[[7,"delex.storage.hash_map.id_int_map.hash_map_insert_keys",false]],"hash_split() (delex.utils.hash_function.hashfunction method)":[[8,"delex.utils.hash_function.HashFunction.hash_split",false]],"hashfunction (class in delex.utils.hash_function)":[[8,"delex.utils.hash_function.HashFunction",false]],"hashindex (class in delex.index.hash_index)":[[3,"delex.index.hash_index.HashIndex",false]],"hashindex.cachekey (class in delex.index.hash_index)":[[3,"delex.index.hash_index.HashIndex.CacheKey",false]],"human_format_bytes() (in module delex.utils.funcs)":[[8,"delex.utils.funcs.human_format_bytes",false]],"id_string (delex.graph.node.node property)":[[2,"delex.graph.node.Node.id_string",false]],"idoffsethashmap (class in delex.storage.hash_map.id_int_map)":[[7,"delex.storage.hash_map.id_int_map.IdOffsetHashMap",false]],"in_degree (delex.graph.node.node property)":[[2,"delex.graph.node.Node.in_degree",false]],"index_col (delex.index.filtered_set_sim_index.filteredsetsimindex.cachekey attribute)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.CacheKey.index_col",false]],"index_col (delex.index.hash_index.hashindex.cachekey attribute)":[[3,"delex.index.hash_index.HashIndex.CacheKey.index_col",false]],"index_col (delex.lang.predicate.bootleg_predicate.bootlegpredicate property)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.index_col",false]],"index_col (delex.lang.predicate.bootleg_predicate.bootlegsim attribute)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegSim.index_col",false]],"index_col (delex.lang.predicate.bootleg_predicate.cachednameindexkey attribute)":[[5,"delex.lang.predicate.bootleg_predicate.CachedNameIndexKey.index_col",false]],"index_col (delex.lang.predicate.bootleg_predicate.cachednameskey attribute)":[[5,"delex.lang.predicate.bootleg_predicate.CachedNamesKey.index_col",false]],"index_col (delex.lang.predicate.exact_match_predicate.exactmatchpredicate property)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.index_col",false]],"index_col (delex.lang.predicate.exact_match_predicate.exactmatchpredicate.sim attribute)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.Sim.index_col",false]],"index_col (delex.lang.predicate.set_sim_predicate.setsimpredicate.sim attribute)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.Sim.index_col",false]],"index_col (delex.lang.predicate.string_sim_predicate.stringsimpredicate.sim attribute)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.Sim.index_col",false]],"index_col (delex.lang.predicate.threshold_predicate.thresholdpredicate property)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.index_col",false]],"index_col (delex.lang.predicate.topk_predicate.bm25topkpredicate property)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.index_col",false]],"index_col (delex.lang.predicate.topk_predicate.bm25topkpredicate.sim attribute)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.Sim.index_col",false]],"index_col (delex.lang.predicate.topk_predicate.cachedbm25indexkey attribute)":[[5,"delex.lang.predicate.topk_predicate.CachedBM25IndexKey.index_col",false]],"index_col (delex.storage.sorted_set.memmapsortedsets.cachekey attribute)":[[6,"delex.storage.sorted_set.MemmapSortedSets.CacheKey.index_col",false]],"index_col (delex.storage.string_store.memmapstrings.cachekey attribute)":[[6,"delex.storage.string_store.MemmapStrings.CacheKey.index_col",false]],"index_col (delex.storage.vector_store.memmapvectorstore.cachekey attribute)":[[6,"delex.storage.vector_store.MemmapVectorStore.CacheKey.index_col",false]],"index_col (delex.tokenizer.tokenizer.cachekey attribute)":[[0,"delex.tokenizer.Tokenizer.CacheKey.index_col",false]],"index_component_sizes() (delex.lang.predicate.bootleg_predicate.bootlegpredicate method)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.index_component_sizes",false]],"index_component_sizes() (delex.lang.predicate.exact_match_predicate.exactmatchpredicate method)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.index_component_sizes",false]],"index_component_sizes() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.index_component_sizes",false]],"index_component_sizes() (delex.lang.predicate.set_sim_predicate.setsimpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.index_component_sizes",false]],"index_component_sizes() (delex.lang.predicate.string_sim_predicate.stringsimpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.index_component_sizes",false]],"index_component_sizes() (delex.lang.predicate.topk_predicate.bm25topkpredicate method)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.index_component_sizes",false]],"index_size_in_bytes() (delex.lang.predicate.bootleg_predicate.bootlegpredicate method)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.index_size_in_bytes",false]],"index_size_in_bytes() (delex.lang.predicate.exact_match_predicate.exactmatchpredicate method)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.index_size_in_bytes",false]],"index_size_in_bytes() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.index_size_in_bytes",false]],"index_size_in_bytes() (delex.lang.predicate.set_sim_predicate.setsimpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.index_size_in_bytes",false]],"index_size_in_bytes() (delex.lang.predicate.string_sim_predicate.stringsimpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.index_size_in_bytes",false]],"index_size_in_bytes() (delex.lang.predicate.topk_predicate.bm25topkpredicate method)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.index_size_in_bytes",false]],"index_table (delex.execution.graph_executor.graphexecutor attribute)":[[1,"delex.execution.graph_executor.GraphExecutor.index_table",false]],"index_table_count (delex.execution.graph_executor.graphexecutor property)":[[1,"delex.execution.graph_executor.GraphExecutor.index_table_count",false]],"index_table_id_col (delex.execution.graph_executor.graphexecutor attribute)":[[1,"delex.execution.graph_executor.GraphExecutor.index_table_id_col",false]],"indexable (delex.lang.predicate.bootleg_predicate.bootlegpredicate property)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.indexable",false]],"indexable (delex.lang.predicate.exact_match_predicate.exactmatchpredicate property)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.indexable",false]],"indexable (delex.lang.predicate.predicate.predicate property)":[[5,"delex.lang.predicate.predicate.Predicate.indexable",false]],"indexable (delex.lang.predicate.set_sim_predicate.overlapcoeffpredicate property)":[[5,"delex.lang.predicate.set_sim_predicate.OverlapCoeffPredicate.indexable",false]],"indexable (delex.lang.predicate.set_sim_predicate.setsimpredicate property)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.indexable",false]],"indexable (delex.lang.predicate.string_sim_predicate.stringsimpredicate property)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.indexable",false]],"indexable (delex.lang.predicate.topk_predicate.bm25topkpredicate property)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.indexable",false]],"init() (delex.graph.node.predicatenode method)":[[2,"delex.graph.node.PredicateNode.init",false]],"init() (delex.graph.node.setopnode method)":[[2,"delex.graph.node.SetOpNode.init",false]],"init() (delex.index.filtered_set_sim_index.filteredsetsimindex method)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.init",false]],"init() (delex.index.hash_index.hashindex method)":[[3,"delex.index.hash_index.HashIndex.init",false]],"init() (delex.index.set_sim_index.setsimindex method)":[[3,"delex.index.set_sim_index.SetSimIndex.init",false]],"init() (delex.lang.predicate.bootleg_predicate.bootlegpredicate method)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.init",false]],"init() (delex.lang.predicate.exact_match_predicate.exactmatchpredicate method)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.init",false]],"init() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.init",false]],"init() (delex.lang.predicate.set_sim_predicate.setsimpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.init",false]],"init() (delex.lang.predicate.string_sim_predicate.stringsimpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.init",false]],"init() (delex.lang.predicate.topk_predicate.bm25topkpredicate method)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.init",false]],"init() (delex.storage.hash_map.hash_map_base.distributablehashmap method)":[[7,"delex.storage.hash_map.hash_map_base.DistributableHashMap.init",false]],"init() (delex.storage.memmap_arr.memmaparray method)":[[6,"delex.storage.memmap_arr.MemmapArray.init",false]],"init() (delex.storage.memmap_seqs.memmapseqs method)":[[6,"delex.storage.memmap_seqs.MemmapSeqs.init",false]],"init() (delex.storage.packed_memmap_arrs.packedmemmaparrays method)":[[6,"delex.storage.packed_memmap_arrs.PackedMemmapArrays.init",false]],"init() (delex.tokenizer.tokenizer method)":[[0,"delex.tokenizer.Tokenizer.init",false]],"init() (delex.utils.traits.sparkdistributable method)":[[8,"delex.utils.traits.SparkDistributable.init",false]],"init_jvm() (in module delex.utils.funcs)":[[8,"delex.utils.funcs.init_jvm",false]],"insert_after() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.insert_after",false]],"insert_before() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.insert_before",false]],"intersectnode (class in delex.graph.node)":[[2,"delex.graph.node.IntersectNode",false]],"invert (delex.lang.predicate.bootleg_predicate.bootlegsim attribute)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegSim.invert",false]],"invert (delex.lang.predicate.exact_match_predicate.exactmatchpredicate.sim attribute)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.Sim.invert",false]],"invert() (delex.lang.predicate.set_sim_predicate.setsimpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.invert",false]],"invert() (delex.lang.predicate.string_sim_predicate.stringsimpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.invert",false]],"invertable (delex.lang.predicate.threshold_predicate.thresholdpredicate property)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.invertable",false]],"invertable (delex.lang.predicate.topk_predicate.bm25topkpredicate property)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.invertable",false]],"is_persisted() (in module delex.utils.funcs)":[[8,"delex.utils.funcs.is_persisted",false]],"is_sink (delex.graph.node.node property)":[[2,"delex.graph.node.Node.is_sink",false]],"is_source (delex.graph.node.node property)":[[2,"delex.graph.node.Node.is_source",false]],"is_topk (delex.lang.predicate.bootleg_predicate.bootlegpredicate property)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.is_topk",false]],"is_topk (delex.lang.predicate.exact_match_predicate.exactmatchpredicate property)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.is_topk",false]],"is_topk (delex.lang.predicate.predicate.predicate property)":[[5,"delex.lang.predicate.predicate.Predicate.is_topk",false]],"is_topk (delex.lang.predicate.set_sim_predicate.setsimpredicate property)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.is_topk",false]],"is_topk (delex.lang.predicate.string_sim_predicate.stringsimpredicate property)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.is_topk",false]],"is_topk (delex.lang.predicate.topk_predicate.bm25topkpredicate property)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.is_topk",false]],"iter_dependencies() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.iter_dependencies",false]],"iter_dependencies() (delex.graph.node.predicatenode method)":[[2,"delex.graph.node.PredicateNode.iter_dependencies",false]],"iter_in() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.iter_in",false]],"iter_out() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.iter_out",false]],"iter_spark_rows() (in module delex.storage.vector_store)":[[6,"delex.storage.vector_store.iter_spark_rows",false]],"jaccard() (delex.storage.sorted_set.memmapsortedsets method)":[[6,"delex.storage.sorted_set.MemmapSortedSets.jaccard",false]],"jaccard_threshold() (delex.index.set_sim_index.setsimindex method)":[[3,"delex.index.set_sim_index.SetSimIndex.jaccard_threshold",false]],"jaccardpredicate (class in delex.lang.predicate.set_sim_predicate)":[[5,"delex.lang.predicate.set_sim_predicate.JaccardPredicate",false]],"jaccardsetsimindexslice (class in delex.index.filtered_set_sim_index_slice)":[[3,"delex.index.filtered_set_sim_index_slice.JaccardSetSimIndexSlice",false]],"jaropredicate (class in delex.lang.predicate.string_sim_predicate)":[[5,"delex.lang.predicate.string_sim_predicate.JaroPredicate",false]],"jarowinklerpredicate (class in delex.lang.predicate.string_sim_predicate)":[[5,"delex.lang.predicate.string_sim_predicate.JaroWinklerPredicate",false]],"jarowinklerpredicate.sim (class in delex.lang.predicate.string_sim_predicate)":[[5,"delex.lang.predicate.string_sim_predicate.JaroWinklerPredicate.Sim",false]],"k (delex.lang.predicate.topk_predicate.bm25topkpredicate property)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.k",false]],"keep_rules (delex.lang.program.blockingprogram attribute)":[[4,"delex.lang.program.BlockingProgram.keep_rules",false]],"keeprule (class in delex.lang.rule)":[[4,"delex.lang.rule.KeepRule",false]],"left (delex.graph.node.minusnode property)":[[2,"delex.graph.node.MinusNode.left",false]],"lowercase (delex.index.hash_index.hashindex.cachekey attribute)":[[3,"delex.index.hash_index.HashIndex.CacheKey.lowercase",false]],"lowercase (delex.lang.predicate.bootleg_predicate.cachednameindexkey attribute)":[[5,"delex.lang.predicate.bootleg_predicate.CachedNameIndexKey.lowercase",false]],"lowercase (delex.lang.predicate.exact_match_predicate.exactmatchpredicate.sim attribute)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.Sim.lowercase",false]],"memmaparray (class in delex.storage.memmap_arr)":[[6,"delex.storage.memmap_arr.MemmapArray",false]],"memmapseqs (class in delex.storage.memmap_seqs)":[[6,"delex.storage.memmap_seqs.MemmapSeqs",false]],"memmapsortedsets (class in delex.storage.sorted_set)":[[6,"delex.storage.sorted_set.MemmapSortedSets",false]],"memmapsortedsets.cachekey (class in delex.storage.sorted_set)":[[6,"delex.storage.sorted_set.MemmapSortedSets.CacheKey",false]],"memmapstrings (class in delex.storage.string_store)":[[6,"delex.storage.string_store.MemmapStrings",false]],"memmapstrings.cachekey (class in delex.storage.string_store)":[[6,"delex.storage.string_store.MemmapStrings.CacheKey",false]],"memmapvectorstore (class in delex.storage.vector_store)":[[6,"delex.storage.vector_store.MemmapVectorStore",false]],"memmapvectorstore.cachekey (class in delex.storage.vector_store)":[[6,"delex.storage.vector_store.MemmapVectorStore.CacheKey",false]],"minusnode (class in delex.graph.node)":[[2,"delex.graph.node.MinusNode",false]],"model_config (delex.execution.graph_executor.graphexecutionstats attribute)":[[1,"delex.execution.graph_executor.GraphExecutionStats.model_config",false]],"model_config (delex.execution.graph_executor.graphexecutor attribute)":[[1,"delex.execution.graph_executor.GraphExecutor.model_config",false]],"model_config (delex.execution.graph_executor.partitionexecutionstats attribute)":[[1,"delex.execution.graph_executor.PartitionExecutionStats.model_config",false]],"model_config (delex.execution.graph_executor.subgraphexecutionstats attribute)":[[1,"delex.execution.graph_executor.SubGraphExecutionStats.model_config",false]],"model_config (delex.execution.plan_executor.planexecutionstats attribute)":[[1,"delex.execution.plan_executor.PlanExecutionStats.model_config",false]],"model_config (delex.execution.plan_executor.planexecutor attribute)":[[1,"delex.execution.plan_executor.PlanExecutor.model_config",false]],"model_post_init() (delex.execution.graph_executor.graphexecutor method)":[[1,"delex.execution.graph_executor.GraphExecutor.model_post_init",false]],"model_post_init() (delex.execution.plan_executor.planexecutor method)":[[1,"delex.execution.plan_executor.PlanExecutor.model_post_init",false]],"module":[[0,"module-delex",false],[0,"module-delex.tokenizer",false],[1,"module-delex.execution",false],[1,"module-delex.execution.cost_estimation",false],[1,"module-delex.execution.dataframe_stream",false],[1,"module-delex.execution.graph_executor",false],[1,"module-delex.execution.optimizer",false],[1,"module-delex.execution.partitioner",false],[1,"module-delex.execution.plan_executor",false],[2,"module-delex.graph",false],[2,"module-delex.graph.algorithms",false],[2,"module-delex.graph.node",false],[2,"module-delex.graph.utils",false],[3,"module-delex.index",false],[3,"module-delex.index.filtered_set_sim_index",false],[3,"module-delex.index.filtered_set_sim_index_slice",false],[3,"module-delex.index.hash_index",false],[3,"module-delex.index.set_sim_index",false],[4,"module-delex.lang",false],[4,"module-delex.lang.program",false],[4,"module-delex.lang.rule",false],[5,"module-delex.lang.predicate",false],[5,"module-delex.lang.predicate.bootleg_predicate",false],[5,"module-delex.lang.predicate.exact_match_predicate",false],[5,"module-delex.lang.predicate.name_map",false],[5,"module-delex.lang.predicate.predicate",false],[5,"module-delex.lang.predicate.set_sim_predicate",false],[5,"module-delex.lang.predicate.string_sim_predicate",false],[5,"module-delex.lang.predicate.threshold_predicate",false],[5,"module-delex.lang.predicate.topk_predicate",false],[6,"module-delex.storage",false],[6,"module-delex.storage.memmap_arr",false],[6,"module-delex.storage.memmap_seqs",false],[6,"module-delex.storage.packed_memmap_arrs",false],[6,"module-delex.storage.sorted_set",false],[6,"module-delex.storage.span_map",false],[6,"module-delex.storage.string_store",false],[6,"module-delex.storage.vector_store",false],[7,"module-delex.storage.hash_map",false],[7,"module-delex.storage.hash_map.hash_map_base",false],[7,"module-delex.storage.hash_map.id_int_map",false],[7,"module-delex.storage.hash_map.string_int_map",false],[8,"module-delex.utils",false],[8,"module-delex.utils.build_cache",false],[8,"module-delex.utils.funcs",false],[8,"module-delex.utils.hash_function",false],[8,"module-delex.utils.numba_functions",false],[8,"module-delex.utils.traits",false]],"name (delex.tokenizer.alphanumerictokenizer attribute)":[[0,"delex.tokenizer.AlphaNumericTokenizer.NAME",false]],"name (delex.tokenizer.numerictokenizer attribute)":[[0,"delex.tokenizer.NumericTokenizer.NAME",false]],"name (delex.tokenizer.strippedwhitespacetokenizer attribute)":[[0,"delex.tokenizer.StrippedWhiteSpaceTokenizer.NAME",false]],"name (delex.tokenizer.whitespacetokenizer attribute)":[[0,"delex.tokenizer.WhiteSpaceTokenizer.NAME",false]],"node (class in delex.graph.node)":[[2,"delex.graph.node.Node",false]],"nodes (delex.execution.graph_executor.graphexecutionstats attribute)":[[1,"delex.execution.graph_executor.GraphExecutionStats.nodes",false]],"nodes (delex.execution.graph_executor.subgraphexecutionstats attribute)":[[1,"delex.execution.graph_executor.SubGraphExecutionStats.nodes",false]],"nodes_to_dot() (in module delex.graph.utils)":[[2,"delex.graph.utils.nodes_to_dot",false]],"nparts (delex.execution.partitioner.dataframepartitioner attribute)":[[1,"delex.execution.partitioner.DataFramePartitioner.nparts",false]],"nthreads (delex.execution.cost_estimation.costestimator property)":[[1,"delex.execution.cost_estimation.CostEstimator.nthreads",false]],"numerictokenizer (class in delex.tokenizer)":[[0,"delex.tokenizer.NumericTokenizer",false]],"nunique_tokens (delex.tokenizer.tokenizer property)":[[0,"delex.tokenizer.Tokenizer.nunique_tokens",false]],"obj (delex.utils.build_cache.cacheitem property)":[[8,"delex.utils.build_cache.CacheItem.obj",false]],"on_spark (delex.storage.hash_map.hash_map_base.distributablehashmap property)":[[7,"delex.storage.hash_map.hash_map_base.DistributableHashMap.on_spark",false]],"op (delex.lang.predicate.bootleg_predicate.bootlegpredicate property)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.op",false]],"op (delex.lang.predicate.exact_match_predicate.exactmatchpredicate property)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.op",false]],"op (delex.lang.predicate.threshold_predicate.thresholdpredicate property)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.op",false]],"optimize (delex.execution.plan_executor.planexecutor attribute)":[[1,"delex.execution.plan_executor.PlanExecutor.optimize",false]],"optimize() (delex.execution.optimizer.blockingprogramoptimizer method)":[[1,"delex.execution.optimizer.BlockingProgramOptimizer.optimize",false]],"optimize_time (delex.execution.plan_executor.planexecutionstats attribute)":[[1,"delex.execution.plan_executor.PlanExecutionStats.optimize_time",false]],"out_degree (delex.graph.node.node property)":[[2,"delex.graph.node.Node.out_degree",false]],"output_col (delex.graph.node.node property)":[[2,"delex.graph.node.Node.output_col",false]],"overlap_coeff() (delex.storage.sorted_set.memmapsortedsets method)":[[6,"delex.storage.sorted_set.MemmapSortedSets.overlap_coeff",false]],"overlap_coeff_threshold() (delex.index.set_sim_index.setsimindex method)":[[3,"delex.index.set_sim_index.SetSimIndex.overlap_coeff_threshold",false]],"overlapcoeffpredicate (class in delex.lang.predicate.set_sim_predicate)":[[5,"delex.lang.predicate.set_sim_predicate.OverlapCoeffPredicate",false]],"packedmemmaparrays (class in delex.storage.packed_memmap_arrs)":[[6,"delex.storage.packed_memmap_arrs.PackedMemmapArrays",false]],"part_num (delex.execution.graph_executor.partitionexecutionstats attribute)":[[1,"delex.execution.graph_executor.PartitionExecutionStats.part_num",false]],"partition_stats (delex.execution.graph_executor.subgraphexecutionstats attribute)":[[1,"delex.execution.graph_executor.SubGraphExecutionStats.partition_stats",false]],"partitioner (delex.execution.graph_executor.partitionexecutionstats attribute)":[[1,"delex.execution.graph_executor.PartitionExecutionStats.partitioner",false]],"partitionexecutionstats (class in delex.execution.graph_executor)":[[1,"delex.execution.graph_executor.PartitionExecutionStats",false]],"persisted() (in module delex.utils.funcs)":[[8,"delex.utils.funcs.persisted",false]],"planexecutionstats (class in delex.execution.plan_executor)":[[1,"delex.execution.plan_executor.PlanExecutionStats",false]],"planexecutor (class in delex.execution.plan_executor)":[[1,"delex.execution.plan_executor.PlanExecutor",false]],"pop() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.pop",false]],"predicate (class in delex.lang.predicate.predicate)":[[5,"delex.lang.predicate.predicate.Predicate",false]],"predicate (delex.graph.node.predicatenode property)":[[2,"delex.graph.node.PredicateNode.predicate",false]],"predicatenode (class in delex.graph.node)":[[2,"delex.graph.node.PredicateNode",false]],"predicates (delex.lang.rule.rule attribute)":[[4,"delex.lang.rule.Rule.predicates",false]],"predict() (delex.execution.cost_estimation.scalingmodel method)":[[1,"delex.execution.cost_estimation.ScalingModel.predict",false]],"prefix_weight (delex.lang.predicate.string_sim_predicate.jarowinklerpredicate.sim attribute)":[[5,"delex.lang.predicate.string_sim_predicate.JaroWinklerPredicate.Sim.prefix_weight",false]],"preprocess() (delex.execution.optimizer.blockingprogramoptimizer method)":[[1,"delex.execution.optimizer.BlockingProgramOptimizer.preprocess",false]],"pretty_str() (delex.lang.program.blockingprogram method)":[[4,"delex.lang.program.BlockingProgram.pretty_str",false]],"pretty_str() (delex.lang.rule.rule method)":[[4,"delex.lang.rule.Rule.pretty_str",false]],"pyarrow_schema() (delex.execution.dataframe_stream.dataframestream method)":[[1,"delex.execution.dataframe_stream.DataFrameStream.pyarrow_schema",false]],"qgramtokenizer (class in delex.tokenizer)":[[0,"delex.tokenizer.QGramTokenizer",false]],"ram_size_in_bytes (delex.execution.graph_executor.graphexecutor attribute)":[[1,"delex.execution.graph_executor.GraphExecutor.ram_size_in_bytes",false]],"re (delex.tokenizer.strippedqgramtokenizer attribute)":[[0,"delex.tokenizer.StrippedQGramTokenizer.RE",false]],"re (delex.tokenizer.strippedwhitespacetokenizer attribute)":[[0,"delex.tokenizer.StrippedWhiteSpaceTokenizer.RE",false]],"remove_in_edge() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.remove_in_edge",false]],"remove_in_edges() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.remove_in_edges",false]],"remove_out_edge() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.remove_out_edge",false]],"remove_out_edges() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.remove_out_edges",false]],"right (delex.graph.node.minusnode property)":[[2,"delex.graph.node.MinusNode.right",false]],"rule (class in delex.lang.rule)":[[4,"delex.lang.rule.Rule",false]],"scalingmodel (class in delex.execution.cost_estimation)":[[1,"delex.execution.cost_estimation.ScalingModel",false]],"schema (delex.execution.dataframe_stream.dataframestream property)":[[1,"delex.execution.dataframe_stream.DataFrameStream.schema",false]],"search() (delex.index.filtered_set_sim_index.filteredsetsimindex method)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.search",false]],"search() (delex.index.filtered_set_sim_index_slice.filteredsetsimindexslice method)":[[3,"delex.index.filtered_set_sim_index_slice.FilteredSetSimIndexSlice.search",false]],"search() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.search",false]],"search() (delex.lang.predicate.string_sim_predicate.stringsimpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.search",false]],"search_batch() (delex.lang.predicate.predicate.predicate method)":[[5,"delex.lang.predicate.predicate.Predicate.search_batch",false]],"search_batch() (delex.lang.predicate.threshold_predicate.thresholdpredicate method)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.search_batch",false]],"search_batch() (delex.lang.predicate.topk_predicate.bm25topkpredicate method)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.search_batch",false]],"search_col (delex.index.filtered_set_sim_index.filteredsetsimindex.cachekey attribute)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.CacheKey.search_col",false]],"search_col (delex.lang.predicate.bootleg_predicate.bootlegpredicate property)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.search_col",false]],"search_col (delex.lang.predicate.bootleg_predicate.bootlegsim attribute)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegSim.search_col",false]],"search_col (delex.lang.predicate.exact_match_predicate.exactmatchpredicate property)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.search_col",false]],"search_col (delex.lang.predicate.exact_match_predicate.exactmatchpredicate.sim attribute)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.Sim.search_col",false]],"search_col (delex.lang.predicate.set_sim_predicate.setsimpredicate.sim attribute)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.Sim.search_col",false]],"search_col (delex.lang.predicate.string_sim_predicate.stringsimpredicate.sim attribute)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.Sim.search_col",false]],"search_col (delex.lang.predicate.threshold_predicate.thresholdpredicate property)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.search_col",false]],"search_col (delex.lang.predicate.topk_predicate.bm25topkpredicate property)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.search_col",false]],"search_col (delex.lang.predicate.topk_predicate.bm25topkpredicate.sim attribute)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.Sim.search_col",false]],"search_col (delex.storage.sorted_set.memmapsortedsets.cachekey attribute)":[[6,"delex.storage.sorted_set.MemmapSortedSets.CacheKey.search_col",false]],"search_col (delex.storage.vector_store.memmapvectorstore.cachekey attribute)":[[6,"delex.storage.vector_store.MemmapVectorStore.CacheKey.search_col",false]],"search_col (delex.tokenizer.tokenizer.cachekey attribute)":[[0,"delex.tokenizer.Tokenizer.CacheKey.search_col",false]],"search_index() (delex.lang.predicate.bootleg_predicate.bootlegpredicate method)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.search_index",false]],"search_index() (delex.lang.predicate.exact_match_predicate.exactmatchpredicate method)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.search_index",false]],"search_index() (delex.lang.predicate.set_sim_predicate.setsimpredicate method)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.search_index",false]],"search_index() (delex.lang.predicate.string_sim_predicate.stringsimpredicate method)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.search_index",false]],"search_index() (delex.lang.predicate.threshold_predicate.thresholdpredicate method)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.search_index",false]],"search_table (delex.execution.graph_executor.graphexecutor attribute)":[[1,"delex.execution.graph_executor.GraphExecutor.search_table",false]],"search_time() (delex.execution.cost_estimation.costestimator method)":[[1,"delex.execution.cost_estimation.CostEstimator.search_time",false]],"selectivity() (delex.execution.cost_estimation.costestimator method)":[[1,"delex.execution.cost_estimation.CostEstimator.selectivity",false]],"setopnode (class in delex.graph.node)":[[2,"delex.graph.node.SetOpNode",false]],"setsimindex (class in delex.index.set_sim_index)":[[3,"delex.index.set_sim_index.SetSimIndex",false]],"setsimindexslice (class in delex.index.set_sim_index)":[[3,"delex.index.set_sim_index.SetSimIndexSlice",false]],"setsimpredicate (class in delex.lang.predicate.set_sim_predicate)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate",false]],"setsimpredicate.sim (class in delex.lang.predicate.set_sim_predicate)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.Sim",false]],"shape (delex.storage.memmap_arr.memmaparray property)":[[6,"delex.storage.memmap_arr.MemmapArray.shape",false]],"shingletokenizer (class in delex.tokenizer)":[[0,"delex.tokenizer.ShingleTokenizer",false]],"sim (delex.index.filtered_set_sim_index.filteredsetsimindex.cachekey attribute)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.CacheKey.sim",false]],"sim (delex.lang.predicate.bootleg_predicate.bootlegpredicate property)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.sim",false]],"sim (delex.lang.predicate.exact_match_predicate.exactmatchpredicate property)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.sim",false]],"sim (delex.lang.predicate.predicate.predicate property)":[[5,"delex.lang.predicate.predicate.Predicate.sim",false]],"sim (delex.lang.predicate.set_sim_predicate.setsimpredicate property)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.sim",false]],"sim (delex.lang.predicate.string_sim_predicate.stringsimpredicate property)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.sim",false]],"sim (delex.lang.predicate.topk_predicate.bm25topkpredicate property)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.sim",false]],"sim_name (delex.lang.predicate.set_sim_predicate.setsimpredicate.sim attribute)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.Sim.sim_name",false]],"sim_name (delex.lang.predicate.string_sim_predicate.stringsimpredicate.sim attribute)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.Sim.sim_name",false]],"size_in_bytes() (delex.index.filtered_set_sim_index.filteredsetsimindex method)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.size_in_bytes",false]],"size_in_bytes() (delex.index.hash_index.hashindex method)":[[3,"delex.index.hash_index.HashIndex.size_in_bytes",false]],"size_in_bytes() (delex.storage.hash_map.hash_map_base.distributablehashmap method)":[[7,"delex.storage.hash_map.hash_map_base.DistributableHashMap.size_in_bytes",false]],"size_in_bytes() (delex.storage.memmap_arr.memmaparray method)":[[6,"delex.storage.memmap_arr.MemmapArray.size_in_bytes",false]],"size_in_bytes() (delex.storage.memmap_seqs.memmapseqs method)":[[6,"delex.storage.memmap_seqs.MemmapSeqs.size_in_bytes",false]],"size_in_bytes() (delex.storage.packed_memmap_arrs.packedmemmaparrays method)":[[6,"delex.storage.packed_memmap_arrs.PackedMemmapArrays.size_in_bytes",false]],"size_in_bytes() (in module delex.utils.funcs)":[[8,"delex.utils.funcs.size_in_bytes",false]],"slice_types (delex.index.filtered_set_sim_index.filteredsetsimindex attribute)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.SLICE_TYPES",false]],"smithwatermanpredicate (class in delex.lang.predicate.string_sim_predicate)":[[5,"delex.lang.predicate.string_sim_predicate.SmithWatermanPredicate",false]],"smithwatermanpredicate.sim (class in delex.lang.predicate.string_sim_predicate)":[[5,"delex.lang.predicate.string_sim_predicate.SmithWatermanPredicate.Sim",false]],"sorted_set_overlap() (in module delex.utils.numba_functions)":[[8,"delex.utils.numba_functions.sorted_set_overlap",false]],"span_map_get_key() (in module delex.storage.span_map)":[[6,"delex.storage.span_map.span_map_get_key",false]],"span_map_insert_key() (in module delex.storage.span_map)":[[6,"delex.storage.span_map.span_map_insert_key",false]],"span_map_insert_keys() (in module delex.storage.span_map)":[[6,"delex.storage.span_map.span_map_insert_keys",false]],"spark_schema() (delex.execution.dataframe_stream.dataframestream method)":[[1,"delex.execution.dataframe_stream.DataFrameStream.spark_schema",false]],"sparkdistributable (class in delex.utils.traits)":[[8,"delex.utils.traits.SparkDistributable",false]],"streamable (delex.graph.node.node property)":[[2,"delex.graph.node.Node.streamable",false]],"streamable (delex.graph.node.predicatenode property)":[[2,"delex.graph.node.PredicateNode.streamable",false]],"streamable (delex.graph.node.setopnode property)":[[2,"delex.graph.node.SetOpNode.streamable",false]],"streamable (delex.lang.predicate.bootleg_predicate.bootlegpredicate property)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.streamable",false]],"streamable (delex.lang.predicate.exact_match_predicate.exactmatchpredicate property)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.streamable",false]],"streamable (delex.lang.predicate.predicate.predicate property)":[[5,"delex.lang.predicate.predicate.Predicate.streamable",false]],"streamable (delex.lang.predicate.set_sim_predicate.setsimpredicate property)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.streamable",false]],"streamable (delex.lang.predicate.string_sim_predicate.stringsimpredicate property)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.streamable",false]],"streamable (delex.lang.predicate.topk_predicate.bm25topkpredicate property)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.streamable",false]],"stringinthashmap (class in delex.storage.hash_map.string_int_map)":[[7,"delex.storage.hash_map.string_int_map.StringIntHashMap",false]],"stringsimpredicate (class in delex.lang.predicate.string_sim_predicate)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate",false]],"stringsimpredicate.sim (class in delex.lang.predicate.string_sim_predicate)":[[5,"delex.lang.predicate.string_sim_predicate.StringSimPredicate.Sim",false]],"strippedqgramtokenizer (class in delex.tokenizer)":[[0,"delex.tokenizer.StrippedQGramTokenizer",false]],"strippedwhitespacetokenizer (class in delex.tokenizer)":[[0,"delex.tokenizer.StrippedWhiteSpaceTokenizer",false]],"sub_graph_stats (delex.execution.graph_executor.graphexecutionstats attribute)":[[1,"delex.execution.graph_executor.GraphExecutionStats.sub_graph_stats",false]],"subgraphexecutionstats (class in delex.execution.graph_executor)":[[1,"delex.execution.graph_executor.SubGraphExecutionStats",false]],"table_a_count (delex.execution.cost_estimation.costestimator property)":[[1,"delex.execution.cost_estimation.CostEstimator.table_a_count",false]],"table_b_count (delex.execution.cost_estimation.costestimator property)":[[1,"delex.execution.cost_estimation.CostEstimator.table_b_count",false]],"threshold (delex.index.filtered_set_sim_index.filteredsetsimindex.cachekey attribute)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.CacheKey.threshold",false]],"thresholdpredicate (class in delex.lang.predicate.threshold_predicate)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate",false]],"to_arrow_stream() (delex.execution.dataframe_stream.dataframestream method)":[[1,"delex.execution.dataframe_stream.DataFrameStream.to_arrow_stream",false]],"to_pandas_stream() (delex.execution.dataframe_stream.dataframestream method)":[[1,"delex.execution.dataframe_stream.DataFrameStream.to_pandas_stream",false]],"to_spark() (delex.index.filtered_set_sim_index.filteredsetsimindex method)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.to_spark",false]],"to_spark() (delex.index.hash_index.hashindex method)":[[3,"delex.index.hash_index.HashIndex.to_spark",false]],"to_spark() (delex.index.set_sim_index.setsimindex method)":[[3,"delex.index.set_sim_index.SetSimIndex.to_spark",false]],"to_spark() (delex.storage.hash_map.hash_map_base.distributablehashmap method)":[[7,"delex.storage.hash_map.hash_map_base.DistributableHashMap.to_spark",false]],"to_spark() (delex.storage.memmap_arr.memmaparray method)":[[6,"delex.storage.memmap_arr.MemmapArray.to_spark",false]],"to_spark() (delex.storage.memmap_seqs.memmapseqs method)":[[6,"delex.storage.memmap_seqs.MemmapSeqs.to_spark",false]],"to_spark() (delex.storage.packed_memmap_arrs.packedmemmaparrays method)":[[6,"delex.storage.packed_memmap_arrs.PackedMemmapArrays.to_spark",false]],"to_spark() (delex.tokenizer.tokenizer method)":[[0,"delex.tokenizer.Tokenizer.to_spark",false]],"to_spark() (delex.utils.traits.sparkdistributable method)":[[8,"delex.utils.traits.SparkDistributable.to_spark",false]],"tokenize() (delex.tokenizer.tokenizer method)":[[0,"delex.tokenizer.Tokenizer.tokenize",false]],"tokenize_set() (delex.tokenizer.tokenizer method)":[[0,"delex.tokenizer.Tokenizer.tokenize_set",false]],"tokenize_set_spark() (delex.tokenizer.tokenizer method)":[[0,"delex.tokenizer.Tokenizer.tokenize_set_spark",false]],"tokenize_spark() (delex.tokenizer.tokenizer method)":[[0,"delex.tokenizer.Tokenizer.tokenize_spark",false]],"tokenizer (class in delex.tokenizer)":[[0,"delex.tokenizer.Tokenizer",false]],"tokenizer (delex.lang.predicate.topk_predicate.cachedbm25indexkey attribute)":[[5,"delex.lang.predicate.topk_predicate.CachedBM25IndexKey.tokenizer",false]],"tokenizer.cachekey (class in delex.tokenizer)":[[0,"delex.tokenizer.Tokenizer.CacheKey",false]],"tokenizer_name (delex.lang.predicate.set_sim_predicate.setsimpredicate.sim attribute)":[[5,"delex.lang.predicate.set_sim_predicate.SetSimPredicate.Sim.tokenizer_name",false]],"tokenizer_name (delex.lang.predicate.topk_predicate.bm25topkpredicate.sim attribute)":[[5,"delex.lang.predicate.topk_predicate.BM25TopkPredicate.Sim.tokenizer_name",false]],"tokenizer_type (delex.index.filtered_set_sim_index.filteredsetsimindex.cachekey attribute)":[[3,"delex.index.filtered_set_sim_index.FilteredSetSimIndex.CacheKey.tokenizer_type",false]],"tokenizer_type (delex.storage.sorted_set.memmapsortedsets.cachekey attribute)":[[6,"delex.storage.sorted_set.MemmapSortedSets.CacheKey.tokenizer_type",false]],"tokenizer_type (delex.storage.vector_store.memmapvectorstore.cachekey attribute)":[[6,"delex.storage.vector_store.MemmapVectorStore.CacheKey.tokenizer_type",false]],"tokenizer_type (delex.tokenizer.tokenizer.cachekey attribute)":[[0,"delex.tokenizer.Tokenizer.CacheKey.tokenizer_type",false]],"topological_sort() (in module delex.graph.algorithms)":[[2,"delex.graph.algorithms.topological_sort",false]],"total_time (delex.execution.graph_executor.graphexecutionstats property)":[[1,"delex.execution.graph_executor.GraphExecutionStats.total_time",false]],"total_time (delex.execution.graph_executor.subgraphexecutionstats property)":[[1,"delex.execution.graph_executor.SubGraphExecutionStats.total_time",false]],"total_time (delex.execution.plan_executor.planexecutionstats property)":[[1,"delex.execution.plan_executor.PlanExecutionStats.total_time",false]],"type_check() (in module delex.utils.funcs)":[[8,"delex.utils.funcs.type_check",false]],"typed_list_to_array() (in module delex.utils.numba_functions)":[[8,"delex.utils.numba_functions.typed_list_to_array",false]],"unionnode (class in delex.graph.node)":[[2,"delex.graph.node.UnionNode",false]],"unpack() (delex.storage.packed_memmap_arrs.packedmemmaparrays method)":[[6,"delex.storage.packed_memmap_arrs.PackedMemmapArrays.unpack",false]],"use_chunking (delex.execution.graph_executor.graphexecutor property)":[[1,"delex.execution.graph_executor.GraphExecutor.use_chunking",false]],"use_cost_estimation (delex.execution.graph_executor.graphexecutor property)":[[1,"delex.execution.graph_executor.GraphExecutor.use_cost_estimation",false]],"val (delex.lang.predicate.bootleg_predicate.bootlegpredicate property)":[[5,"delex.lang.predicate.bootleg_predicate.BootlegPredicate.val",false]],"val (delex.lang.predicate.exact_match_predicate.exactmatchpredicate property)":[[5,"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.val",false]],"val (delex.lang.predicate.threshold_predicate.thresholdpredicate property)":[[5,"delex.lang.predicate.threshold_predicate.ThresholdPredicate.val",false]],"validate() (delex.execution.cost_estimation.costestimator method)":[[1,"delex.execution.cost_estimation.CostEstimator.validate",false]],"validate() (delex.graph.node.intersectnode method)":[[2,"delex.graph.node.IntersectNode.validate",false]],"validate() (delex.graph.node.minusnode method)":[[2,"delex.graph.node.MinusNode.validate",false]],"validate() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.validate",false]],"validate() (delex.graph.node.predicatenode method)":[[2,"delex.graph.node.PredicateNode.validate",false]],"validate() (delex.graph.node.unionnode method)":[[2,"delex.graph.node.UnionNode.validate",false]],"validate() (delex.lang.program.blockingprogram method)":[[4,"delex.lang.program.BlockingProgram.validate",false]],"validate() (delex.lang.rule.droprule method)":[[4,"delex.lang.rule.DropRule.validate",false]],"validate() (delex.lang.rule.keeprule method)":[[4,"delex.lang.rule.KeepRule.validate",false]],"values (delex.storage.memmap_arr.memmaparray property)":[[6,"delex.storage.memmap_arr.MemmapArray.values",false]],"vector_dtype (delex.storage.vector_store.memmapvectorstore attribute)":[[6,"delex.storage.vector_store.MemmapVectorStore.vector_dtype",false]],"whitespace_norm (delex.tokenizer.strippedwhitespacetokenizer attribute)":[[0,"delex.tokenizer.StrippedWhiteSpaceTokenizer.WHITESPACE_NORM",false]],"whitespacetokenizer (class in delex.tokenizer)":[[0,"delex.tokenizer.WhiteSpaceTokenizer",false]],"working_set_size (delex.execution.graph_executor.graphexecutionstats property)":[[1,"delex.execution.graph_executor.GraphExecutionStats.working_set_size",false]],"working_set_size (delex.execution.graph_executor.partitionexecutionstats attribute)":[[1,"delex.execution.graph_executor.PartitionExecutionStats.working_set_size",false]],"working_set_size (delex.execution.graph_executor.subgraphexecutionstats property)":[[1,"delex.execution.graph_executor.SubGraphExecutionStats.working_set_size",false]],"working_set_size() (delex.execution.cost_estimation.costestimator method)":[[1,"delex.execution.cost_estimation.CostEstimator.working_set_size",false]],"working_set_size() (delex.graph.node.node method)":[[2,"delex.graph.node.Node.working_set_size",false]],"working_set_size() (delex.graph.node.predicatenode method)":[[2,"delex.graph.node.PredicateNode.working_set_size",false]],"working_set_size() (delex.graph.node.setopnode method)":[[2,"delex.graph.node.SetOpNode.working_set_size",false]]},"objects":{"":[[0,0,0,"-","delex"]],"delex":[[1,0,0,"-","execution"],[2,0,0,"-","graph"],[3,0,0,"-","index"],[4,0,0,"-","lang"],[6,0,0,"-","storage"],[0,0,0,"-","tokenizer"],[8,0,0,"-","utils"]],"delex.execution":[[1,0,0,"-","cost_estimation"],[1,0,0,"-","dataframe_stream"],[1,0,0,"-","graph_executor"],[1,0,0,"-","optimizer"],[1,0,0,"-","partitioner"],[1,0,0,"-","plan_executor"]],"delex.execution.cost_estimation":[[1,1,1,"","CostEstimator"],[1,1,1,"","ScalingModel"]],"delex.execution.cost_estimation.CostEstimator":[[1,2,1,"","build_time"],[1,2,1,"","compute_estimates"],[1,2,1,"","estimate_plan_cost"],[1,2,1,"","filter_time"],[1,3,1,"","nthreads"],[1,2,1,"","search_time"],[1,2,1,"","selectivity"],[1,3,1,"","table_a_count"],[1,3,1,"","table_b_count"],[1,2,1,"","validate"],[1,2,1,"","working_set_size"]],"delex.execution.cost_estimation.ScalingModel":[[1,2,1,"","fit"],[1,2,1,"","predict"]],"delex.execution.dataframe_stream":[[1,1,1,"","DataFrameStream"]],"delex.execution.dataframe_stream.DataFrameStream":[[1,2,1,"","apply"],[1,2,1,"","drop"],[1,2,1,"","from_arrow_iter"],[1,2,1,"","from_pandas_iter"],[1,2,1,"","pyarrow_schema"],[1,3,1,"","schema"],[1,2,1,"","spark_schema"],[1,2,1,"","to_arrow_stream"],[1,2,1,"","to_pandas_stream"]],"delex.execution.graph_executor":[[1,1,1,"","GraphExecutionStats"],[1,1,1,"","GraphExecutor"],[1,1,1,"","PartitionExecutionStats"],[1,1,1,"","SubGraphExecutionStats"]],"delex.execution.graph_executor.GraphExecutionStats":[[1,3,1,"","build_time"],[1,4,1,"","dot_graph"],[1,3,1,"","exec_time"],[1,4,1,"","model_config"],[1,4,1,"","nodes"],[1,4,1,"","sub_graph_stats"],[1,3,1,"","total_time"],[1,3,1,"","working_set_size"]],"delex.execution.graph_executor.GraphExecutor":[[1,4,1,"","build_parallelism"],[1,4,1,"","cost_est"],[1,2,1,"","execute"],[1,4,1,"","index_table"],[1,3,1,"","index_table_count"],[1,4,1,"","index_table_id_col"],[1,4,1,"","model_config"],[1,2,1,"","model_post_init"],[1,4,1,"","ram_size_in_bytes"],[1,4,1,"","search_table"],[1,3,1,"","use_chunking"],[1,3,1,"","use_cost_estimation"]],"delex.execution.graph_executor.PartitionExecutionStats":[[1,4,1,"","build_time"],[1,4,1,"","exec_time"],[1,4,1,"","model_config"],[1,4,1,"","part_num"],[1,4,1,"","partitioner"],[1,4,1,"","working_set_size"]],"delex.execution.graph_executor.SubGraphExecutionStats":[[1,3,1,"","build_time"],[1,3,1,"","exec_time"],[1,4,1,"","model_config"],[1,4,1,"","nodes"],[1,4,1,"","partition_stats"],[1,3,1,"","total_time"],[1,3,1,"","working_set_size"]],"delex.execution.optimizer":[[1,1,1,"","BlockingProgramOptimizer"]],"delex.execution.optimizer.BlockingProgramOptimizer":[[1,2,1,"","default_plan"],[1,2,1,"","optimize"],[1,2,1,"","preprocess"]],"delex.execution.partitioner":[[1,1,1,"","DataFramePartitioner"]],"delex.execution.partitioner.DataFramePartitioner":[[1,4,1,"","column"],[1,2,1,"","filter_array"],[1,2,1,"","get_partition"],[1,4,1,"","nparts"]],"delex.execution.plan_executor":[[1,1,1,"","PlanExecutionStats"],[1,1,1,"","PlanExecutor"]],"delex.execution.plan_executor.PlanExecutionStats":[[1,4,1,"","cost_estimation_time"],[1,4,1,"","graph_exec_stats"],[1,4,1,"","model_config"],[1,4,1,"","optimize_time"],[1,3,1,"","total_time"]],"delex.execution.plan_executor.PlanExecutor":[[1,4,1,"","estimate_cost"],[1,2,1,"","execute"],[1,2,1,"","generate_plan"],[1,4,1,"","model_config"],[1,2,1,"","model_post_init"],[1,4,1,"","optimize"]],"delex.graph":[[2,0,0,"-","algorithms"],[2,0,0,"-","node"],[2,0,0,"-","utils"]],"delex.graph.algorithms":[[2,5,1,"","clone_graph"],[2,5,1,"","find_all_nodes"],[2,5,1,"","find_sink"],[2,5,1,"","topological_sort"]],"delex.graph.node":[[2,1,1,"","IntersectNode"],[2,1,1,"","MinusNode"],[2,1,1,"","Node"],[2,1,1,"","PredicateNode"],[2,1,1,"","SetOpNode"],[2,1,1,"","UnionNode"]],"delex.graph.node.IntersectNode":[[2,2,1,"","validate"]],"delex.graph.node.MinusNode":[[2,3,1,"","left"],[2,3,1,"","right"],[2,2,1,"","validate"]],"delex.graph.node.Node":[[2,2,1,"","add_in_edge"],[2,2,1,"","add_out_edge"],[2,2,1,"","ancestors"],[2,2,1,"","build"],[2,2,1,"","equivalent"],[2,2,1,"","execute"],[2,3,1,"","id_string"],[2,3,1,"","in_degree"],[2,2,1,"","insert_after"],[2,2,1,"","insert_before"],[2,3,1,"","is_sink"],[2,3,1,"","is_source"],[2,2,1,"","iter_dependencies"],[2,2,1,"","iter_in"],[2,2,1,"","iter_out"],[2,3,1,"","out_degree"],[2,3,1,"","output_col"],[2,2,1,"","pop"],[2,2,1,"","remove_in_edge"],[2,2,1,"","remove_in_edges"],[2,2,1,"","remove_out_edge"],[2,2,1,"","remove_out_edges"],[2,3,1,"","streamable"],[2,2,1,"","validate"],[2,2,1,"","working_set_size"]],"delex.graph.node.PredicateNode":[[2,2,1,"","build"],[2,2,1,"","execute"],[2,2,1,"","init"],[2,2,1,"","iter_dependencies"],[2,3,1,"","predicate"],[2,3,1,"","streamable"],[2,2,1,"","validate"],[2,2,1,"","working_set_size"]],"delex.graph.node.SetOpNode":[[2,2,1,"","build"],[2,2,1,"","execute"],[2,2,1,"","init"],[2,3,1,"","streamable"],[2,2,1,"","working_set_size"]],"delex.graph.node.UnionNode":[[2,2,1,"","validate"]],"delex.graph.utils":[[2,5,1,"","nodes_to_dot"]],"delex.index":[[3,0,0,"-","filtered_set_sim_index"],[3,0,0,"-","filtered_set_sim_index_slice"],[3,0,0,"-","hash_index"],[3,0,0,"-","set_sim_index"]],"delex.index.filtered_set_sim_index":[[3,1,1,"","FilteredSetSimIndex"]],"delex.index.filtered_set_sim_index.FilteredSetSimIndex":[[3,1,1,"","CacheKey"],[3,4,1,"","SLICE_TYPES"],[3,2,1,"","build"],[3,2,1,"","deinit"],[3,2,1,"","from_sparse_mat"],[3,2,1,"","init"],[3,2,1,"","search"],[3,2,1,"","size_in_bytes"],[3,2,1,"","to_spark"]],"delex.index.filtered_set_sim_index.FilteredSetSimIndex.CacheKey":[[3,4,1,"","index_col"],[3,4,1,"","search_col"],[3,4,1,"","sim"],[3,4,1,"","threshold"],[3,4,1,"","tokenizer_type"]],"delex.index.filtered_set_sim_index_slice":[[3,1,1,"","CosineSetSimIndexSlice"],[3,1,1,"","FilteredSetSimIndexSlice"],[3,1,1,"","JaccardSetSimIndexSlice"]],"delex.index.filtered_set_sim_index_slice.CosineSetSimIndexSlice":[[3,4,1,"","class_type"]],"delex.index.filtered_set_sim_index_slice.FilteredSetSimIndexSlice":[[3,2,1,"","search"]],"delex.index.filtered_set_sim_index_slice.JaccardSetSimIndexSlice":[[3,4,1,"","class_type"]],"delex.index.hash_index":[[3,1,1,"","HashIndex"]],"delex.index.hash_index.HashIndex":[[3,1,1,"","CacheKey"],[3,2,1,"","build"],[3,2,1,"","deinit"],[3,2,1,"","fetch"],[3,2,1,"","init"],[3,2,1,"","size_in_bytes"],[3,2,1,"","to_spark"]],"delex.index.hash_index.HashIndex.CacheKey":[[3,4,1,"","index_col"],[3,4,1,"","lowercase"]],"delex.index.set_sim_index":[[3,1,1,"","SetSimIndex"],[3,1,1,"","SetSimIndexSlice"]],"delex.index.set_sim_index.SetSimIndex":[[3,2,1,"","cosine_threshold"],[3,2,1,"","from_sparse_mat"],[3,2,1,"","init"],[3,2,1,"","jaccard_threshold"],[3,2,1,"","overlap_coeff_threshold"],[3,2,1,"","to_spark"]],"delex.index.set_sim_index.SetSimIndexSlice":[[3,4,1,"","class_type"]],"delex.lang":[[5,0,0,"-","predicate"],[4,0,0,"-","program"],[4,0,0,"-","rule"]],"delex.lang.predicate":[[5,0,0,"-","bootleg_predicate"],[5,0,0,"-","exact_match_predicate"],[5,0,0,"-","name_map"],[5,0,0,"-","predicate"],[5,0,0,"-","set_sim_predicate"],[5,0,0,"-","string_sim_predicate"],[5,0,0,"-","threshold_predicate"],[5,0,0,"-","topk_predicate"]],"delex.lang.predicate.bootleg_predicate":[[5,1,1,"","BootlegPredicate"],[5,1,1,"","BootlegSim"],[5,1,1,"","CachedNameIndexKey"],[5,1,1,"","CachedNamesKey"]],"delex.lang.predicate.bootleg_predicate.BootlegPredicate":[[5,2,1,"","build"],[5,2,1,"","compute_scores"],[5,2,1,"","contains"],[5,2,1,"","deinit"],[5,3,1,"","index_col"],[5,2,1,"","index_component_sizes"],[5,2,1,"","index_size_in_bytes"],[5,3,1,"","indexable"],[5,2,1,"","init"],[5,3,1,"","is_topk"],[5,3,1,"","op"],[5,3,1,"","search_col"],[5,2,1,"","search_index"],[5,3,1,"","sim"],[5,3,1,"","streamable"],[5,3,1,"","val"]],"delex.lang.predicate.bootleg_predicate.BootlegSim":[[5,4,1,"","index_col"],[5,4,1,"","invert"],[5,4,1,"","search_col"]],"delex.lang.predicate.bootleg_predicate.CachedNameIndexKey":[[5,4,1,"","index_col"],[5,4,1,"","lowercase"]],"delex.lang.predicate.bootleg_predicate.CachedNamesKey":[[5,4,1,"","index_col"]],"delex.lang.predicate.exact_match_predicate":[[5,1,1,"","ExactMatchPredicate"]],"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate":[[5,1,1,"","Sim"],[5,2,1,"","build"],[5,2,1,"","compute_scores"],[5,2,1,"","contains"],[5,2,1,"","deinit"],[5,3,1,"","index_col"],[5,2,1,"","index_component_sizes"],[5,2,1,"","index_size_in_bytes"],[5,3,1,"","indexable"],[5,2,1,"","init"],[5,3,1,"","is_topk"],[5,3,1,"","op"],[5,3,1,"","search_col"],[5,2,1,"","search_index"],[5,3,1,"","sim"],[5,3,1,"","streamable"],[5,3,1,"","val"]],"delex.lang.predicate.exact_match_predicate.ExactMatchPredicate.Sim":[[5,4,1,"","index_col"],[5,4,1,"","invert"],[5,4,1,"","lowercase"],[5,4,1,"","search_col"]],"delex.lang.predicate.predicate":[[5,1,1,"","Predicate"]],"delex.lang.predicate.predicate.Predicate":[[5,2,1,"","build"],[5,2,1,"","contains"],[5,2,1,"","deinit"],[5,2,1,"","filter"],[5,2,1,"","filter_batch"],[5,2,1,"","index_component_sizes"],[5,2,1,"","index_size_in_bytes"],[5,3,1,"","indexable"],[5,2,1,"","init"],[5,3,1,"","is_topk"],[5,2,1,"","search"],[5,2,1,"","search_batch"],[5,3,1,"","sim"],[5,3,1,"","streamable"]],"delex.lang.predicate.set_sim_predicate":[[5,1,1,"","CosinePredicate"],[5,1,1,"","JaccardPredicate"],[5,1,1,"","OverlapCoeffPredicate"],[5,1,1,"","SetSimPredicate"]],"delex.lang.predicate.set_sim_predicate.CosinePredicate":[[5,2,1,"","compute_scores"]],"delex.lang.predicate.set_sim_predicate.JaccardPredicate":[[5,2,1,"","compute_scores"]],"delex.lang.predicate.set_sim_predicate.OverlapCoeffPredicate":[[5,2,1,"","compute_scores"],[5,3,1,"","indexable"]],"delex.lang.predicate.set_sim_predicate.SetSimPredicate":[[5,1,1,"","Sim"],[5,2,1,"","build"],[5,2,1,"","contains"],[5,2,1,"","deinit"],[5,2,1,"","index_component_sizes"],[5,2,1,"","index_size_in_bytes"],[5,3,1,"","indexable"],[5,2,1,"","init"],[5,2,1,"","invert"],[5,3,1,"","is_topk"],[5,2,1,"","search_index"],[5,3,1,"","sim"],[5,3,1,"","streamable"]],"delex.lang.predicate.set_sim_predicate.SetSimPredicate.Sim":[[5,4,1,"","index_col"],[5,4,1,"","search_col"],[5,4,1,"","sim_name"],[5,4,1,"","tokenizer_name"]],"delex.lang.predicate.string_sim_predicate":[[5,1,1,"","EditDistancePredicate"],[5,1,1,"","JaroPredicate"],[5,1,1,"","JaroWinklerPredicate"],[5,1,1,"","SmithWatermanPredicate"],[5,1,1,"","StringSimPredicate"]],"delex.lang.predicate.string_sim_predicate.JaroWinklerPredicate":[[5,1,1,"","Sim"],[5,2,1,"","contains"]],"delex.lang.predicate.string_sim_predicate.JaroWinklerPredicate.Sim":[[5,4,1,"","prefix_weight"]],"delex.lang.predicate.string_sim_predicate.SmithWatermanPredicate":[[5,1,1,"","Sim"],[5,2,1,"","contains"]],"delex.lang.predicate.string_sim_predicate.SmithWatermanPredicate.Sim":[[5,4,1,"","gap_cost"]],"delex.lang.predicate.string_sim_predicate.StringSimPredicate":[[5,1,1,"","Sim"],[5,2,1,"","build"],[5,2,1,"","compute_scores"],[5,2,1,"","deinit"],[5,2,1,"","index_component_sizes"],[5,2,1,"","index_size_in_bytes"],[5,3,1,"","indexable"],[5,2,1,"","init"],[5,2,1,"","invert"],[5,3,1,"","is_topk"],[5,2,1,"","search"],[5,2,1,"","search_index"],[5,3,1,"","sim"],[5,3,1,"","streamable"]],"delex.lang.predicate.string_sim_predicate.StringSimPredicate.Sim":[[5,4,1,"","index_col"],[5,4,1,"","search_col"],[5,4,1,"","sim_name"]],"delex.lang.predicate.threshold_predicate":[[5,1,1,"","ThresholdPredicate"]],"delex.lang.predicate.threshold_predicate.ThresholdPredicate":[[5,2,1,"","compute_scores"],[5,2,1,"","contains"],[5,2,1,"","filter_batch"],[5,3,1,"","index_col"],[5,3,1,"","invertable"],[5,3,1,"","op"],[5,2,1,"","search_batch"],[5,3,1,"","search_col"],[5,2,1,"","search_index"],[5,3,1,"","val"]],"delex.lang.predicate.topk_predicate":[[5,1,1,"","BM25TopkPredicate"],[5,1,1,"","CachedBM25IndexKey"]],"delex.lang.predicate.topk_predicate.BM25TopkPredicate":[[5,1,1,"","Sim"],[5,2,1,"","build"],[5,2,1,"","contains"],[5,2,1,"","deinit"],[5,2,1,"","filter_batch"],[5,3,1,"","index_col"],[5,2,1,"","index_component_sizes"],[5,2,1,"","index_size_in_bytes"],[5,3,1,"","indexable"],[5,2,1,"","init"],[5,3,1,"","invertable"],[5,3,1,"","is_topk"],[5,3,1,"","k"],[5,2,1,"","search_batch"],[5,3,1,"","search_col"],[5,3,1,"","sim"],[5,3,1,"","streamable"]],"delex.lang.predicate.topk_predicate.BM25TopkPredicate.Sim":[[5,4,1,"","index_col"],[5,4,1,"","search_col"],[5,4,1,"","tokenizer_name"]],"delex.lang.predicate.topk_predicate.CachedBM25IndexKey":[[5,4,1,"","index_col"],[5,4,1,"","tokenizer"]],"delex.lang.program":[[4,1,1,"","BlockingProgram"]],"delex.lang.program.BlockingProgram":[[4,4,1,"","drop_rules"],[4,4,1,"","keep_rules"],[4,2,1,"","pretty_str"],[4,2,1,"","validate"]],"delex.lang.rule":[[4,1,1,"","DropRule"],[4,1,1,"","KeepRule"],[4,1,1,"","Rule"]],"delex.lang.rule.DropRule":[[4,2,1,"","validate"]],"delex.lang.rule.KeepRule":[[4,2,1,"","validate"]],"delex.lang.rule.Rule":[[4,2,1,"","contains"],[4,4,1,"","predicates"],[4,2,1,"","pretty_str"]],"delex.storage":[[7,0,0,"-","hash_map"],[6,0,0,"-","memmap_arr"],[6,0,0,"-","memmap_seqs"],[6,0,0,"-","packed_memmap_arrs"],[6,0,0,"-","sorted_set"],[6,0,0,"-","span_map"],[6,0,0,"-","string_store"],[6,0,0,"-","vector_store"]],"delex.storage.hash_map":[[7,0,0,"-","hash_map_base"],[7,0,0,"-","id_int_map"],[7,0,0,"-","string_int_map"]],"delex.storage.hash_map.hash_map_base":[[7,1,1,"","DistributableHashMap"]],"delex.storage.hash_map.hash_map_base.DistributableHashMap":[[7,2,1,"","deinit"],[7,2,1,"","init"],[7,3,1,"","on_spark"],[7,2,1,"","size_in_bytes"],[7,2,1,"","to_spark"]],"delex.storage.hash_map.id_int_map":[[7,1,1,"","IdOffsetHashMap"],[7,5,1,"","hash_map_get_key"],[7,5,1,"","hash_map_get_keys"],[7,5,1,"","hash_map_insert_key"],[7,5,1,"","hash_map_insert_keys"]],"delex.storage.hash_map.id_int_map.IdOffsetHashMap":[[7,2,1,"","build"]],"delex.storage.hash_map.string_int_map":[[7,1,1,"","StringIntHashMap"]],"delex.storage.hash_map.string_int_map.StringIntHashMap":[[7,2,1,"","build"]],"delex.storage.memmap_arr":[[6,1,1,"","MemmapArray"]],"delex.storage.memmap_arr.MemmapArray":[[6,2,1,"","deinit"],[6,2,1,"","delete"],[6,2,1,"","init"],[6,3,1,"","shape"],[6,2,1,"","size_in_bytes"],[6,2,1,"","to_spark"],[6,3,1,"","values"]],"delex.storage.memmap_seqs":[[6,1,1,"","MemmapSeqs"]],"delex.storage.memmap_seqs.MemmapSeqs":[[6,2,1,"","build"],[6,2,1,"","deinit"],[6,2,1,"","delete"],[6,2,1,"","fetch"],[6,2,1,"","init"],[6,2,1,"","size_in_bytes"],[6,2,1,"","to_spark"]],"delex.storage.packed_memmap_arrs":[[6,1,1,"","PackedMemmapArrays"]],"delex.storage.packed_memmap_arrs.PackedMemmapArrays":[[6,2,1,"","deinit"],[6,2,1,"","delete"],[6,2,1,"","init"],[6,2,1,"","size_in_bytes"],[6,2,1,"","to_spark"],[6,2,1,"","unpack"]],"delex.storage.sorted_set":[[6,1,1,"","MemmapSortedSets"]],"delex.storage.sorted_set.MemmapSortedSets":[[6,1,1,"","CacheKey"],[6,2,1,"","build"],[6,2,1,"","cosine"],[6,2,1,"","jaccard"],[6,2,1,"","overlap_coeff"]],"delex.storage.sorted_set.MemmapSortedSets.CacheKey":[[6,4,1,"","index_col"],[6,4,1,"","search_col"],[6,4,1,"","tokenizer_type"]],"delex.storage.span_map":[[6,5,1,"","create_span_map"],[6,5,1,"","span_map_get_key"],[6,5,1,"","span_map_insert_key"],[6,5,1,"","span_map_insert_keys"]],"delex.storage.string_store":[[6,1,1,"","MemmapStrings"]],"delex.storage.string_store.MemmapStrings":[[6,1,1,"","CacheKey"],[6,2,1,"","build"],[6,2,1,"","fetch"],[6,2,1,"","fetch_bytes"]],"delex.storage.string_store.MemmapStrings.CacheKey":[[6,4,1,"","index_col"]],"delex.storage.vector_store":[[6,1,1,"","MemmapVectorStore"],[6,5,1,"","iter_spark_rows"]],"delex.storage.vector_store.MemmapVectorStore":[[6,1,1,"","CacheKey"],[6,2,1,"","arrays_to_encoded_sparse_vector"],[6,2,1,"","build"],[6,2,1,"","decode_sparse_vector"],[6,2,1,"","dot"],[6,2,1,"","fetch"],[6,4,1,"","vector_dtype"]],"delex.storage.vector_store.MemmapVectorStore.CacheKey":[[6,4,1,"","index_col"],[6,4,1,"","search_col"],[6,4,1,"","tokenizer_type"]],"delex.tokenizer":[[0,1,1,"","AlphaNumericTokenizer"],[0,1,1,"","NumericTokenizer"],[0,1,1,"","QGramTokenizer"],[0,1,1,"","ShingleTokenizer"],[0,1,1,"","StrippedQGramTokenizer"],[0,1,1,"","StrippedWhiteSpaceTokenizer"],[0,1,1,"","Tokenizer"],[0,1,1,"","WhiteSpaceTokenizer"]],"delex.tokenizer.AlphaNumericTokenizer":[[0,4,1,"","NAME"]],"delex.tokenizer.NumericTokenizer":[[0,4,1,"","NAME"]],"delex.tokenizer.ShingleTokenizer":[[0,2,1,"","base_tokenize"]],"delex.tokenizer.StrippedQGramTokenizer":[[0,4,1,"","RE"]],"delex.tokenizer.StrippedWhiteSpaceTokenizer":[[0,4,1,"","NAME"],[0,4,1,"","RE"],[0,4,1,"","WHITESPACE_NORM"]],"delex.tokenizer.Tokenizer":[[0,1,1,"","CacheKey"],[0,2,1,"","build"],[0,2,1,"","deinit"],[0,2,1,"","init"],[0,3,1,"","nunique_tokens"],[0,2,1,"","to_spark"],[0,2,1,"","tokenize"],[0,2,1,"","tokenize_set"],[0,2,1,"","tokenize_set_spark"],[0,2,1,"","tokenize_spark"]],"delex.tokenizer.Tokenizer.CacheKey":[[0,4,1,"","index_col"],[0,4,1,"","search_col"],[0,4,1,"","tokenizer_type"]],"delex.tokenizer.WhiteSpaceTokenizer":[[0,4,1,"","NAME"]],"delex.utils":[[8,0,0,"-","build_cache"],[8,0,0,"-","funcs"],[8,0,0,"-","hash_function"],[8,0,0,"-","numba_functions"],[8,0,0,"-","traits"]],"delex.utils.build_cache":[[8,1,1,"","BuildCache"],[8,1,1,"","CacheItem"],[8,1,1,"","CachedObjectKey"]],"delex.utils.build_cache.BuildCache":[[8,2,1,"","get"]],"delex.utils.build_cache.CacheItem":[[8,3,1,"","obj"]],"delex.utils.funcs":[[8,5,1,"","attach_current_thread_jvm"],[8,5,1,"","get_logger"],[8,5,1,"","human_format_bytes"],[8,5,1,"","init_jvm"],[8,5,1,"","is_persisted"],[8,5,1,"","persisted"],[8,5,1,"","size_in_bytes"],[8,5,1,"","type_check"]],"delex.utils.hash_function":[[8,1,1,"","HashFunction"]],"delex.utils.hash_function.HashFunction":[[8,2,1,"","hash"],[8,2,1,"","hash_split"]],"delex.utils.numba_functions":[[8,5,1,"","sorted_set_overlap"],[8,5,1,"","typed_list_to_array"]],"delex.utils.traits":[[8,1,1,"","SparkDistributable"]],"delex.utils.traits.SparkDistributable":[[8,2,1,"","deinit"],[8,2,1,"","init"],[8,2,1,"","to_spark"]]},"objnames":{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","property","Python property"],"4":["py","attribute","Python attribute"],"5":["py","function","Python function"]},"objtypes":{"0":"py:module","1":"py:class","2":"py:method","3":"py:property","4":"py:attribute","5":"py:function"},"terms":{"":[0,1,8],"0":[1,3,5,6,7],"1":[2,5,8],"10":[3,8],"128":8,"15afff2c0":3,"15b2fa780":3,"15b2fba40":3,"16384":3,"1d":3,"4":[1,3],"5":7,"75":6,"8":3,"9":0,"A":[1,3,8],"If":[1,8],"In":5,"It":1,"NOT":3,"That":[1,4],"The":[1,5],"_id":[1,3,5,6],"abc":[2,5,8],"abstract":[2,5],"abstractmethod":[2,5,8],"account":2,"acquir":5,"ad":1,"add":[2,8],"add_in_edg":[0,2],"add_out_edg":[0,2],"affect":1,"after":2,"algorithm":[0,10],"all":[2,3,4,5,6,8],"alloc":1,"alnum_token":0,"along":1,"alphanumerictoken":[0,10],"an":[1,2,3,4,5,6],"ancestor":[0,2],"ani":[1,4,5],"annot":1,"anyth":1,"append":1,"appli":[0,1],"ar":[1,2,4,5],"arbitrari":6,"arbitrary_types_allow":1,"arg":[1,3],"argument":1,"arr":[1,6,7],"arrai":[0,1,3,5,6,8],"arrays_to_encoded_sparse_vector":[0,6],"associ":[5,6,8],"attach_current_thread_jvm":[0,8],"attribut":[0,1,2,5,6,7,8],"base":[0,1,2,3,4,5,6,7,8],"base_token":[0,10],"basemodel":1,"batch":5,"becom":2,"been":[1,2,5],"befor":2,"behav":1,"behavior":1,"being":8,"between":[2,6,8],"bin":6,"bit":8,"block":[1,4,5],"blocking_program":1,"blockingprogram":[0,1,4],"blockingprogramoptim":[0,1],"bm25topkpred":[4,5],"bool":[0,1,2,3,5],"bootleg_pred":[0,4],"bootlegpred":[4,5],"bootlegsim":[4,5],"both":2,"build":[0,2,3,4,5,6,7,8,10],"build_cach":[0,10],"build_parallel":[0,1],"build_tim":[0,1],"buildcach":[0,2,5,8],"built":[2,5],"byte":[5,6,8],"c":4,"cach":[2,5,8],"cachedbm25indexkei":[4,5],"cachednameindexkei":[4,5],"cachednameskei":[4,5],"cachedobjectkei":[0,3,5,6,8],"cacheitem":[0,8],"cachekei":[0,3,6,10],"call":[1,2],"callabl":[1,5],"can":[1,2,4,5],"cannot":1,"certain":0,"check":[2,4,8],"class":[0,1,2,3,4,5,6,7,8],"class_typ":[0,3],"classmethod":[1,3,6,7],"classvar":1,"clone_graph":[0,2],"close":[0,3,6,7,8],"cluster":[0,3,6,7,8],"col":[0,6],"column":[0,1,2,3,5,6],"compar":2,"comparison":2,"compil":0,"compon":2,"comput":[1,2,6,8],"compute_estim":[0,1],"compute_scor":[4,5],"config":1,"configdict":1,"configur":1,"conform":1,"construct":1,"contain":[0,4,5,6],"content":10,"context":1,"convert":[1,2],"core":1,"cosin":[0,3,6],"cosine_threshold":[0,3],"cosinepred":[4,5],"cosinesetsimindexslic":[0,3],"cost":1,"cost_est":[0,1],"cost_estim":[0,10],"cost_estimation_tim":[0,1],"costestim":[0,1],"covert":8,"creat":[1,4,6],"create_span_map":[0,6],"cross":1,"data":[1,3,5],"datafram":[0,1,2,3,5,6],"dataframe_stream":[0,10],"dataframepartition":[0,1],"dataframestream":[0,1,2],"datatyp":1,"decode_sparse_vector":[0,6],"default":1,"default_plan":[0,1],"defin":5,"deinit":[0,3,4,5,6,7,8,10],"deiniti":[0,3,6,7,8],"delet":[0,6],"demonstr":5,"depend":2,"df":[0,1,3,6,8],"dict":[1,2,5],"dictionari":[1,5],"directori":8,"disk":[6,8],"distributablehashmap":[6,7],"do":3,"doe":[2,5],"doen":1,"doesn":[2,3,8],"dot":[0,2,6],"dot_graph":[0,1],"drop":[0,1,4],"drop_rul":[0,4],"droprul":[0,4],"dtype":6,"du":8,"dure":1,"e":[0,1,2,3,5,6,7,8],"each":[2,5],"edg":2,"editdistancepred":[4,5],"effici":[0,1,5],"element":6,"els":[2,3,4,5,6,8],"ensur":2,"entir":[1,4],"entri":[3,6],"equival":[0,2],"error":8,"essenti":8,"estim":1,"estimate_cost":[0,1],"estimate_plan_cost":[0,1],"etc":[2,6,8],"evalu":5,"exact":5,"exact_match_pred":[0,4],"exactmatchpred":[4,5],"exec_tim":[0,1],"execut":[0,2,4,10],"exist":[2,3,8],"expect":8,"experiment":5,"explicitli":1,"express":[0,1],"extra":1,"f":8,"f4":6,"fail":2,"fals":[1,2,3,4,5,8],"fetch":[0,3,6],"fetch_byt":[0,6],"field":1,"file":[0,3,5,6,7,8],"filenotfounderror":8,"filesystem":8,"filter":[1,4,5],"filter_arrai":[0,1],"filter_batch":[4,5],"filter_tim":[0,1],"filtered_set_sim_index":[0,10],"filtered_set_sim_index_slic":[0,10],"filteredsetsimindex":[0,3],"filteredsetsimindexslic":[0,3],"find_all_nod":[0,2],"find_sink":[0,2],"fit":[0,1],"flat":1,"flatten":1,"float":[1,3,5],"float32":3,"for_search":[1,5],"format":[1,4],"found":[3,6],"from":[1,2,3,6],"from_arrow_it":[0,1],"from_orm":1,"from_pandas_it":[0,1],"from_sparse_mat":[0,3],"func":[0,1,10],"function":1,"g":[0,2,3,6,7,8],"gap_cost":5,"gener":1,"generate_plan":[0,1],"get":[0,1,2,5,6,8],"get_logg":[0,8],"get_partit":[0,1],"give":0,"given":4,"graph":[0,1,10],"graph_exec_stat":[0,1],"graph_executor":[0,10],"graphexecutionstat":[0,1],"graphexecutor":[0,1],"gt":1,"guard":8,"ha":[2,4],"handl":[0,3,5,6,7,8],"hash":[0,1,2,3,5,8],"hash_func":7,"hash_funct":[0,10],"hash_index":[0,10],"hash_map":[0,6],"hash_map_bas":[0,6],"hash_map_get_kei":[6,7],"hash_map_insert_kei":[6,7],"hash_split":[0,8],"hashfunct":[0,8],"hashindex":[0,3],"hasn":5,"have":[1,2],"hold":6,"human_format_byt":[0,8],"i":[1,2,3,4,5,6,8],"i4":6,"id":[1,2,3,5,6],"id1_list":5,"id_col":[2,3,6],"id_int_map":[0,6],"id_list":5,"id_str":[0,2],"identifi":2,"idoffsethashmap":[6,7],"implement":1,"in_degre":[0,2],"incom":2,"ind":6,"index":[0,1,2,4,5,8,9,10],"index_col":[0,3,4,5,6],"index_component_s":[4,5],"index_id_col":5,"index_size_in_byt":[4,5],"index_t":[0,1,2,3,5],"index_table_count":[0,1],"index_table_id_col":[0,1],"indexes_out":3,"indptr":3,"init":[0,2,3,4,5,6,7,8,10],"init_jvm":[0,8],"initi":[0,3,5,6,7,8],"initialis":1,"input":[1,2],"input_col":[0,1],"insert":[2,6],"insert_aft":[0,2],"insert_befor":[0,2],"instanc":[1,6],"int":[1,2,3,5,6,7,8],"int16":3,"int32":3,"int64":3,"intersect":2,"intersectnod":[0,2],"invert":[4,5],"is_persist":[0,8],"is_sink":[0,2],"is_sourc":[0,2],"is_topk":[4,5],"isn":8,"issu":1,"item":8,"iter":[1,2,5],"iter_depend":[0,2],"iter_in":[0,2],"iter_out":[0,2],"iter_spark_row":[0,6],"itr":[1,5],"jaccard":[0,3,6],"jaccard_threshold":[0,3],"jaccardpred":[4,5],"jaccardsetsimindexslic":[0,3],"jaropred":[4,5],"jarowinklerpred":[4,5],"jitclass":3,"json":1,"k":[4,5],"keep":4,"keep_rul":[0,4],"keeprul":[0,4],"kei":[3,6,7,8],"keyerror":[1,2],"kwarg":3,"l":8,"l_ind":8,"lang":[0,10],"least":[1,4],"left":[0,2],"len":3,"length":6,"level":8,"liber":5,"like":1,"linear":1,"list":[1,4,6,8],"load_factor":[6,7],"local":8,"lockabl":8,"logic":4,"long":[1,5,7],"lowercas":[3,4,5],"make":5,"mani":6,"map":[3,6],"match":5,"max_slice_s":3,"meant":1,"measur":3,"memmap":6,"memmap_arr":[0,10],"memmap_seq":[0,10],"memmaparrai":[0,6],"memmapseq":[0,6],"memmapsortedset":[0,6],"memmapstr":[0,6],"memmapvectorstor":[0,6],"memori":3,"metadata":0,"method":[0,1,2,3,4,5,6,7,8],"metric":3,"minimum":3,"minu":2,"minusnod":[0,2],"model":1,"model_config":[0,1],"model_extra":1,"model_fields_set":1,"model_post_init":[0,1],"modul":[9,10],"more":5,"multipl":2,"mutex":8,"n":[0,8],"name":[0,1,2,3,5,6,8,10],"name_map":[0,4],"nan":6,"ncol":3,"ndarrai":[1,3,5,6],"nest":1,"new":[1,2,6,8],"node":[0,1,10],"nodes_to_dot":[0,2],"non":5,"none":[0,1,2,3,5,6,8],"np":[3,6],"npart":[0,1],"nrow":3,"nthread":[0,1],"num_token":0,"numba":8,"numba_funct":[0,10],"number":1,"numerictoken":[0,10],"numpi":[3,8],"nunique_token":[0,10],"o":5,"obj":[0,1,3,6,7,8],"object":[0,1,3,4,5,6,7,8],"offset":[3,6],"on_spark":[6,7],"one":4,"onli":5,"op":[4,5],"oper":2,"optim":[0,3,10],"optimize_tim":[0,1],"option":[1,2,5],"other":[2,4,5],"otherwis":5,"out":2,"out_degre":[0,2],"out_dtyp":1,"out_nam":1,"outgo":2,"output":[0,1,2,5],"output_col":[0,2],"over":[1,2,3,5,6],"overlap":8,"overlap_coeff":[0,6],"overlap_coeff_threshold":[0,3],"overlap_coeffici":6,"overlapcoeffpred":[4,5],"pa":1,"packag":10,"packed_memmap_arr":[0,10],"packedmemmaparrai":[0,6],"page":9,"pair":[4,5],"panda":1,"parallel":8,"paramet":[1,2,3,5,6,8],"parit":1,"parse_fil":1,"parse_obj":1,"parse_raw":1,"part_num":[0,1],"particular":5,"partit":[1,5],"partition":[0,10],"partition_stat":[0,1],"partitionexecutionstat":[0,1],"pass":1,"path":8,"pd":1,"perform":[2,5],"persist":[0,8],"person":5,"plan":[1,4],"plan_executor":[0,10],"planexecutionstat":[0,1],"planexecutor":[0,1],"pnum":1,"pointer":8,"pop":[0,2],"possibl":1,"predic":[0,1,2,4],"predicatenod":[0,2],"predict":[0,1],"prefetch_s":6,"prefix_weight":5,"preprocess":[0,1,2,3,5],"pretti":4,"pretty_str":[0,4],"privat":1,"product":1,"prog":1,"program":[0,1,5,10],"project":1,"properti":[0,1,2,5,6,7,8],"provid":1,"pyarrow":1,"pyarrow_schema":[0,1],"pydant":1,"pyspark":[1,2,3,5,6],"q":0,"qgramtoken":[0,10],"queri":[5,6],"r_ind":8,"rais":[1,2,4,8],"ram_size_in_byt":[0,1],"re":[0,1,10],"read":6,"reconnect":2,"record":[3,4],"recordbatch":1,"recurs":2,"redund":1,"refer":3,"referenc":6,"releas":5,"remov":[1,2],"remove_in_edg":[0,2],"remove_out_edg":[0,2],"replac":1,"represent":2,"requir":[0,1],"resolv":1,"resourc":[0,1,3,5,6,7,8],"result":1,"retriev":[3,6,8],"return":[0,1,2,3,4,5,6,8],"right":[0,2],"rule":[0,1,10],"runtim":1,"runtimeerror":[2,4],"same":0,"satisfi":[3,5],"scale":1,"scalingmodel":[0,1],"schema":[0,1,5],"schema_json":1,"score":[3,5,6],"scores_out":3,"search":[0,3,4,5,9],"search_batch":[4,5],"search_col":[0,3,4,5,6],"search_index":[4,5],"search_tabl":[0,1],"search_tim":[0,1],"seed":8,"select":[0,1],"self":[1,2,4,5,6],"send":[0,3,6,7,8],"seq_col":6,"sequenc":6,"seri":5,"set":[0,1,2,3,4,5,6],"set_data":3,"set_indptr":3,"set_sim_index":[0,10],"set_sim_pred":[0,4],"setopnod":[0,2],"setsimindex":[0,3],"setsimindexslic":[0,3],"setsimpred":[4,5],"shape":[0,6],"shingletoken":[0,10],"should":1,"sim":[3,4,5],"sim_nam":5,"simiarl":5,"similar":[3,8],"simpl":[1,5,8],"simpli":1,"sinc":1,"singl":[1,2,5,6,8],"sink":[1,2],"sink_nod":2,"size":[1,2,3,5,6,8],"size_in_byt":[0,3,6,7,8],"slice_typ":[0,3],"smithwatermanpred":[4,5],"some":5,"sort":[6,8],"sorted_set":[0,10],"sorted_set_overlap":[0,8],"span":6,"span_map":[0,3,10],"span_map_get_kei":[0,6],"span_map_insert_kei":[0,6],"spark":[0,3,6,7,8],"spark_schema":[0,1],"sparkdistribut":[0,3,6,7,8],"sparse_mat":3,"split":8,"sql":[1,2,3,5,6],"static":6,"statist":1,"storag":[0,10],"storage_level":8,"storagelevel":8,"store":6,"str":[0,1,2,3,4,5,6,8],"stream":[1,2,5],"streamabl":[0,2,4,5],"strict":5,"string":[0,2,3,4,6,7,8],"string_int_map":[0,6],"string_sim_pred":[0,4],"string_stor":[0,10],"stringinthashmap":[6,7],"stringsimpred":[4,5],"stripped_whitespace_token":0,"strippedqgramtoken":[0,10],"strippedwhitespacetoken":[0,10],"structtyp":1,"structur":5,"sub_graph_stat":[0,1],"subgraph":1,"subgraphexecutionstat":[0,1],"submodul":10,"subpackag":10,"superset":[4,5],"suppli":1,"t":[1,2,3,5,8],"tabl":[1,2,5],"table_a":1,"table_a_count":[0,1],"table_b":1,"table_b_count":[0,1],"take":1,"thi":[1,2,3,4,5],"those":1,"thre":3,"threshold":3,"threshold_pred":[0,4],"thresholdpred":[4,5],"throw":8,"time":[1,5],"to_arrow_stream":[0,1],"to_pandas_stream":[0,1],"to_spark":[0,3,6,7,8,10],"token":[3,4,5,6,8,10],"token_col":3,"token_set":6,"tokenize_set":[0,10],"tokenize_set_spark":[0,10],"tokenize_spark":[0,10],"tokenizer_nam":5,"tokenizer_typ":[0,3,6],"topk":5,"topk_pred":[0,4],"topological_sort":[0,2],"total":[5,8],"total_tim":[0,1],"trait":[0,10],"tranform":1,"true":[0,1,2,4,5,8],"tupl":[1,3,5,6,8],"turn":[1,4],"two":[1,2,8],"type":[1,3,6,8],"type_check":[0,8],"typed_list_to_arrai":[0,8],"unalign":3,"union":2,"unionnod":[0,2],"uniqu":[2,3,5,6,8],"unpack":[0,6],"update_forward_ref":1,"us":[0,1,2,3,5,6,7,8],"use_chunk":[0,1],"use_cost_estim":[0,1],"use_freq":0,"user":5,"util":[0,10],"val":[4,5,6,7],"valid":[0,1,2,4],"valu":[0,2,6],"valueerror":[1,2],"var":8,"var_nam":8,"variat":5,"vector_dtyp":[0,6],"vector_stor":[0,10],"vmarg":8,"w":0,"what":1,"when":[0,1],"where":6,"which":[1,5],"whitespace_norm":[0,10],"whitespace_token":0,"whitespacetoken":[0,10],"without":2,"work":[1,2],"worker":[0,3,6,7,8],"working_set_s":[0,1,2],"would":1,"wrapper":8,"write":[5,6],"x":[2,5],"xxhash3":8,"xxhash64":1,"y":5,"yet":[2,5],"z0":0,"zip":5},"titles":["delex package","delex.execution package","delex.graph package","delex.index package","delex.lang package","delex.lang.predicate package","delex.storage package","delex.storage.hash_map package","delex.utils package","Welcome to Delex\u2019s documentation!","delex"],"titleterms":{"":9,"algorithm":2,"bootleg_pred":5,"build_cach":8,"content":[0,1,2,3,4,5,6,7,8],"cost_estim":1,"dataframe_stream":1,"delex":[0,1,2,3,4,5,6,7,8,9,10],"document":9,"exact_match_pred":5,"execut":1,"filtered_set_sim_index":3,"filtered_set_sim_index_slic":3,"func":8,"graph":2,"graph_executor":1,"hash_funct":8,"hash_index":3,"hash_map":7,"hash_map_bas":7,"id_int_map":7,"index":3,"indic":9,"lang":[4,5],"memmap_arr":6,"memmap_seq":6,"modul":[0,1,2,3,4,5,6,7,8],"name_map":5,"node":2,"numba_funct":8,"optim":1,"packag":[0,1,2,3,4,5,6,7,8],"packed_memmap_arr":6,"partition":1,"plan_executor":1,"predic":5,"program":4,"rule":4,"set_sim_index":3,"set_sim_pred":5,"sorted_set":6,"span_map":6,"storag":[6,7],"string_int_map":7,"string_sim_pred":5,"string_stor":6,"submodul":[0,1,2,3,4,5,6,7,8],"subpackag":[0,4,6],"tabl":9,"threshold_pred":5,"token":0,"topk_pred":5,"trait":8,"util":[2,8],"vector_stor":6,"welcom":9}})